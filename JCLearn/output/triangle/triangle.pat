	Label	Killed	Alive	Type	Location	Words	Line	Code
@Pattern	Killed	1577	337	#cons	IfStatement[449]	[]	536	"if(argc > 3)     {         x = atoi(argv[1]);         y = atoi(argv[2]);         z = atoi(argv[3]);         t = triangle(x,y,z);         switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }         return 0;     }     else     {      fprintf(stderr, "Invalid usage: a.exe x y z\n");      return -1;     }"
@Pattern	Killed	1488	295	#cons	IfStatement[449]	['(argc) > (3)']	536	"if(argc > 3)     {         x = atoi(argv[1]);         y = atoi(argv[2]);         z = atoi(argv[3]);         t = triangle(x,y,z);         switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }         return 0;     }     else     {      fprintf(stderr, "Invalid usage: a.exe x y z\n");      return -1;     }"
@Pattern	Killed	539	152	#cons	CallStatement[503]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	539	152	#cons	CallStatement[503]	['true']	541	"triangle(x,y,z)"
@Pattern	Alive	5	6	#expr	Implicator[281]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#expr	Implicator[281]	['true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#expr	Implicator[281]	['not_bool', 'true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#expr	Implicator[281]	['not_bool', 'set_true', 'true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#expr	Implicator[281]	['set_true', 'true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	5	6	#expr	Implicator[281]	['not_bool']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#expr	Implicator[281]	['not_bool', 'set_true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#expr	Implicator[281]	['set_true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	18	3	#cons	IfEndStatement[280]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Unknown	1	1	#cons	IfEndStatement[280]	['((a > 0) && (b > 0)) != ((c) > (0))']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	819	128	#cons	IfStatement[282]	[]	519	"if((a > 0) && (b > 0) && (c > 0)) {         if((a+b>c) && (b+c>a) && (a+c>b)) {             if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;         }         else return -1;     }     else return -1;"
@Pattern	Killed	7	6	#cons	IfStatement[282]	['true']	519	"if((a > 0) && (b > 0) && (c > 0)) {         if((a+b>c) && (b+c>a) && (a+c>b)) {             if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;         }         else return -1;     }     else return -1;"
@Pattern	Killed	13	0	#trap	IfEndStatement[280]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	17	3	#cons	IfEndStatement[267]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Unknown	1	1	#cons	IfEndStatement[267]	['((a) > (0)) != ((b) > (0))']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	5	6	#expr	Implicator[268]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Alive	1	4	#expr	Implicator[268]	['true']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	1	4	#expr	Implicator[268]	['not_bool', 'true']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	1	4	#expr	Implicator[268]	['not_bool', 'set_true', 'true']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	1	4	#expr	Implicator[268]	['set_true', 'true']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	5	6	#expr	Implicator[268]	['not_bool']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	1	4	#expr	Implicator[268]	['not_bool', 'set_true']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	1	4	#expr	Implicator[268]	['set_true']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	5	6	#cons	SaveAssignStatement[270]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	5	6	#cons	SaveAssignStatement[270]	['true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	5	6	#stat	Implicator[269]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#stat	Implicator[269]	['@(true)']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#stat	Implicator[269]	['@(true)', 'not_bool']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#stat	Implicator[269]	['@(true)', 'not_bool', 'set_true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#stat	Implicator[269]	['@(true)', 'set_true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	5	6	#stat	Implicator[269]	['not_bool']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#stat	Implicator[269]	['not_bool', 'set_true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	1	4	#stat	Implicator[269]	['set_true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	13	0	#trap	IfEndStatement[267]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Killed	535	95	#cons	IfStatement[320]	[]	520	"if((a+b>c) && (b+c>a) && (a+c>b)) {             if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;         }         else return -1;"
@Pattern	Killed	11	2	#cons	IfStatement[320]	['true']	520	"if((a+b>c) && (b+c>a) && (a+c>b)) {             if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;         }         else return -1;"
@Pattern	Killed	9	2	#expr	Implicator[319]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#expr	Implicator[319]	['true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	9	2	#expr	Implicator[319]	['not_bool']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#expr	Implicator[319]	['not_bool', 'true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#expr	Implicator[319]	['not_bool', 'set_true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#expr	Implicator[319]	['set_true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	21	0	#cons	IfEndStatement[318]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	13	0	#trap	IfEndStatement[318]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	9	2	#expr	Implicator[304]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	5	0	#expr	Implicator[304]	['true']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	9	2	#expr	Implicator[304]	['not_bool']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	5	0	#expr	Implicator[304]	['not_bool', 'true']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	5	0	#expr	Implicator[304]	['not_bool', 'set_true']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	5	0	#expr	Implicator[304]	['set_true']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	9	2	#stat	Implicator[305]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#stat	Implicator[305]	['@(true)']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	9	2	#stat	Implicator[305]	['not_bool']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#stat	Implicator[305]	['@(true)', 'not_bool']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#stat	Implicator[305]	['not_bool', 'set_true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	5	0	#stat	Implicator[305]	['set_true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	9	2	#cons	SaveAssignStatement[306]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	9	2	#cons	SaveAssignStatement[306]	['true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	20	0	#cons	IfEndStatement[303]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	13	0	#trap	IfEndStatement[303]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	336	57	#cons	IfStatement[339]	[]	521	"if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;"
@Pattern	Killed	11	2	#cons	IfStatement[339]	['true']	521	"if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;"
@Pattern	Killed	21	0	#cons	IfEndStatement[337]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	9	2	#expr	Implicator[338]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	5	0	#expr	Implicator[338]	['true']	521	"(a==b) && (b==c)"
@Pattern	Killed	9	2	#expr	Implicator[338]	['not_bool']	521	"(a==b) && (b==c)"
@Pattern	Killed	5	0	#expr	Implicator[338]	['not_bool', 'true']	521	"(a==b) && (b==c)"
@Pattern	Killed	5	0	#expr	Implicator[338]	['not_bool', 'set_true']	521	"(a==b) && (b==c)"
@Pattern	Killed	5	0	#expr	Implicator[338]	['set_true']	521	"(a==b) && (b==c)"
@Pattern	Killed	13	0	#trap	IfEndStatement[337]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	18	3	#cons	IfEndStatement[378]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	13	1	#cons	IfEndStatement[378]	['true']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	12	1	#trap	IfEndStatement[378]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	12	1	#trap	IfEndStatement[378]	['trapping']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	56	10	#cons	IfStatement[380]	[]	523	"if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;"
@Pattern	Killed	10	4	#cons	IfStatement[380]	['true']	523	"if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;"
@Pattern	Killed	8	4	#expr	Implicator[379]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#expr	Implicator[379]	['false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#expr	Implicator[379]	['false', 'not_bool']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#expr	Implicator[379]	['false', 'not_bool', 'set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#expr	Implicator[379]	['false', 'set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	8	4	#expr	Implicator[379]	['not_bool']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#expr	Implicator[379]	['not_bool', 'set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#expr	Implicator[379]	['set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	12	1	#trap	IfEndStatement[364]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	12	1	#trap	IfEndStatement[364]	['trapping']	523	"(a==b) || (b==c)"
@Pattern	Killed	17	3	#cons	IfEndStatement[364]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	12	1	#cons	IfEndStatement[364]	['true']	523	"(a==b) || (b==c)"
@Pattern	Killed	8	4	#stat	Implicator[366]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#stat	Implicator[366]	['@(false)']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#stat	Implicator[366]	['@(false)', 'not_bool']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#stat	Implicator[366]	['@(false)', 'not_bool', 'set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#stat	Implicator[366]	['@(false)', 'set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	8	4	#stat	Implicator[366]	['not_bool']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#stat	Implicator[366]	['not_bool', 'set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	5	1	#stat	Implicator[366]	['set_false']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	8	4	#expr	Implicator[365]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	5	1	#expr	Implicator[365]	['false']	523	"(a==b) || (b==c)"
@Pattern	Killed	5	1	#expr	Implicator[365]	['false', 'not_bool']	523	"(a==b) || (b==c)"
@Pattern	Killed	5	1	#expr	Implicator[365]	['false', 'not_bool', 'set_false']	523	"(a==b) || (b==c)"
@Pattern	Killed	5	1	#expr	Implicator[365]	['false', 'set_false']	523	"(a==b) || (b==c)"
@Pattern	Killed	8	4	#expr	Implicator[365]	['not_bool']	523	"(a==b) || (b==c)"
@Pattern	Killed	5	1	#expr	Implicator[365]	['not_bool', 'set_false']	523	"(a==b) || (b==c)"
@Pattern	Killed	5	1	#expr	Implicator[365]	['set_false']	523	"(a==b) || (b==c)"
@Pattern	Killed	8	4	#cons	SaveAssignStatement[367]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	8	4	#cons	SaveAssignStatement[367]	['true']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	51	27	#cons	SaveAssignStatement[279]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	51	27	#cons	SaveAssignStatement[279]	['true']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	20	24	#expr	RelationExpression[277]	[]	519	"c > 0"
@Pattern	Alive	0	1	#expr	RelationExpression[277]	['(c) + (0)']	519	"c > 0"
@Pattern	Alive	20	21	#expr	RelationExpression[277]	['not_bool']	519	"c > 0"
@Pattern	Alive	0	1	#expr	RelationExpression[277]	['(c) + (0)', 'not_bool']	519	"c > 0"
@Pattern	Alive	20	24	#stat	Implicator[278]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	0	1	#stat	Implicator[278]	['@((c) + (0))']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	20	24	#stat	Implicator[278]	['not_bool']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	0	1	#stat	Implicator[278]	['@((c) + (0))', 'not_bool']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	51	27	#cons	IfStatement[272]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	51	27	#cons	IfStatement[272]	['(a > 0) && (b > 0) && (c > 0)']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	31	3	#trap	SaveAssignStatement[279]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	31	3	#trap	SaveAssignStatement[279]	['trapping']	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Alive	20	24	#stat	Implicator[256]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Alive	0	1	#stat	Implicator[256]	['@((a) + (0))']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	20	24	#stat	Implicator[256]	['not_bool']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	0	1	#stat	Implicator[256]	['@((a) + (0))', 'not_bool']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	20	24	#expr	RelationExpression[255]	[]	519	"a > 0"
@Pattern	Alive	0	1	#expr	RelationExpression[255]	['(a) + (0)']	519	"a > 0"
@Pattern	Alive	20	21	#expr	RelationExpression[255]	['not_bool']	519	"a > 0"
@Pattern	Alive	0	1	#expr	RelationExpression[255]	['(a) + (0)', 'not_bool']	519	"a > 0"
@Pattern	Killed	51	27	#cons	SaveAssignStatement[257]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Killed	51	27	#cons	SaveAssignStatement[257]	['true']	519	"(a > 0) && (b > 0)"
@Pattern	Killed	31	3	#trap	SaveAssignStatement[257]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Killed	31	3	#trap	SaveAssignStatement[257]	['trapping']	519	"(a > 0) && (b > 0)"
@Pattern	Killed	51	27	#cons	IfStatement[259]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Killed	51	27	#cons	IfStatement[259]	['(a > 0) && (b > 0)']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	20	24	#expr	RelationExpression[264]	[]	519	"b > 0"
@Pattern	Alive	0	1	#expr	RelationExpression[264]	['(b) + (0)']	519	"b > 0"
@Pattern	Alive	20	21	#expr	RelationExpression[264]	['not_bool']	519	"b > 0"
@Pattern	Alive	0	1	#expr	RelationExpression[264]	['(b) + (0)', 'not_bool']	519	"b > 0"
@Pattern	Alive	20	24	#stat	Implicator[265]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Alive	0	1	#stat	Implicator[265]	['@((b) + (0))']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	20	24	#stat	Implicator[265]	['not_bool']	519	"(a > 0) && (b > 0)"
@Pattern	Alive	0	1	#stat	Implicator[265]	['@((b) + (0))', 'not_bool']	519	"(a > 0) && (b > 0)"
@Pattern	Killed	51	27	#cons	SaveAssignStatement[266]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Killed	51	27	#cons	SaveAssignStatement[266]	['true']	519	"(a > 0) && (b > 0)"
@Pattern	Killed	31	3	#trap	SaveAssignStatement[266]	[]	519	"(a > 0) && (b > 0)"
@Pattern	Killed	31	3	#trap	SaveAssignStatement[266]	['trapping']	519	"(a > 0) && (b > 0)"
@Pattern	Killed	78	6	#stat	Implicator[316]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	1	0	#stat	Implicator[316]	['@(((a) + (c)) + (b))']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	78	6	#stat	Implicator[316]	['not_bool']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	1	0	#stat	Implicator[316]	['@(((a) + (c)) + (b))', 'not_bool']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	134	14	#cons	SaveAssignStatement[317]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	134	14	#cons	SaveAssignStatement[317]	['true']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	78	6	#expr	RelationExpression[315]	[]	520	"a+c>b"
@Pattern	Killed	1	0	#expr	RelationExpression[315]	['((a) + (c)) + (b)']	520	"a+c>b"
@Pattern	Killed	78	6	#expr	RelationExpression[315]	['not_bool']	520	"a+c>b"
@Pattern	Killed	1	0	#expr	RelationExpression[315]	['((a) + (c)) + (b)', 'not_bool']	520	"a+c>b"
@Pattern	Killed	134	14	#cons	IfStatement[308]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	134	14	#cons	IfStatement[308]	['(a + b > c) && (b + c > a) && (a + c > b)']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	54	8	#trap	SaveAssignStatement[317]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	54	8	#trap	SaveAssignStatement[317]	['trapping']	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	135	14	#cons	SaveAssignStatement[291]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	135	14	#cons	SaveAssignStatement[291]	['true']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	78	6	#expr	RelationExpression[289]	[]	520	"a+b>c"
@Pattern	Killed	1	0	#expr	RelationExpression[289]	['((a) + (b)) + (c)']	520	"a+b>c"
@Pattern	Killed	78	6	#expr	RelationExpression[289]	['not_bool']	520	"a+b>c"
@Pattern	Killed	1	0	#expr	RelationExpression[289]	['((a) + (b)) + (c)', 'not_bool']	520	"a+b>c"
@Pattern	Killed	78	6	#stat	Implicator[290]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	1	0	#stat	Implicator[290]	['@(((a) + (b)) + (c))']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	78	6	#stat	Implicator[290]	['not_bool']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	1	0	#stat	Implicator[290]	['@(((a) + (b)) + (c))', 'not_bool']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	55	8	#trap	SaveAssignStatement[291]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	55	8	#trap	SaveAssignStatement[291]	['trapping']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	134	14	#cons	SaveAssignStatement[302]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	134	14	#cons	SaveAssignStatement[302]	['true']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	78	6	#expr	RelationExpression[300]	[]	520	"b+c>a"
@Pattern	Killed	1	0	#expr	RelationExpression[300]	['((b) + (c)) + (a)']	520	"b+c>a"
@Pattern	Killed	78	6	#expr	RelationExpression[300]	['not_bool']	520	"b+c>a"
@Pattern	Killed	1	0	#expr	RelationExpression[300]	['((b) + (c)) + (a)', 'not_bool']	520	"b+c>a"
@Pattern	Killed	134	14	#cons	IfStatement[293]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	134	14	#cons	IfStatement[293]	['(a + b > c) && (b + c > a)']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	78	6	#stat	Implicator[301]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	1	0	#stat	Implicator[301]	['@(((b) + (c)) + (a))']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	78	6	#stat	Implicator[301]	['not_bool']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	1	0	#stat	Implicator[301]	['@(((b) + (c)) + (a))', 'not_bool']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	54	8	#trap	SaveAssignStatement[302]	[]	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	54	8	#trap	SaveAssignStatement[302]	['trapping']	520	"(a+b>c) && (b+c>a)"
@Pattern	Killed	42	5	#expr	RelationExpression[325]	[]	521	"a==b"
@Pattern	Killed	1	0	#expr	RelationExpression[325]	['(a) + (b)']	521	"a==b"
@Pattern	Killed	42	5	#expr	RelationExpression[325]	['not_bool']	521	"a==b"
@Pattern	Killed	1	0	#expr	RelationExpression[325]	['(a) + (b)', 'not_bool']	521	"a==b"
@Pattern	Killed	75	10	#cons	SaveAssignStatement[327]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	75	10	#cons	SaveAssignStatement[327]	['true']	521	"(a==b) && (b==c)"
@Pattern	Killed	42	5	#stat	Implicator[326]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[326]	['@((a) + (b))']	521	"(a==b) && (b==c)"
@Pattern	Killed	42	5	#stat	Implicator[326]	['not_bool']	521	"(a==b) && (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[326]	['@((a) + (b))', 'not_bool']	521	"(a==b) && (b==c)"
@Pattern	Killed	31	5	#trap	SaveAssignStatement[327]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	31	5	#trap	SaveAssignStatement[327]	['trapping']	521	"(a==b) && (b==c)"
@Pattern	Killed	71	13	#cons	IfStatement[329]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	71	13	#cons	IfStatement[329]	['(a == b) && (b == c)']	521	"(a==b) && (b==c)"
@Pattern	Killed	71	13	#cons	SaveAssignStatement[336]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	71	13	#cons	SaveAssignStatement[336]	['true']	521	"(a==b) && (b==c)"
@Pattern	Killed	42	5	#stat	Implicator[335]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[335]	['@((b) + (c))']	521	"(a==b) && (b==c)"
@Pattern	Killed	42	5	#stat	Implicator[335]	['not_bool']	521	"(a==b) && (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[335]	['@((b) + (c))', 'not_bool']	521	"(a==b) && (b==c)"
@Pattern	Killed	42	5	#expr	RelationExpression[334]	[]	521	"b==c"
@Pattern	Killed	1	0	#expr	RelationExpression[334]	['(b) + (c)']	521	"b==c"
@Pattern	Killed	42	5	#expr	RelationExpression[334]	['not_bool']	521	"b==c"
@Pattern	Killed	1	0	#expr	RelationExpression[334]	['(b) + (c)', 'not_bool']	521	"b==c"
@Pattern	Killed	29	6	#trap	SaveAssignStatement[336]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	29	6	#trap	SaveAssignStatement[336]	['trapping']	521	"(a==b) && (b==c)"
@Pattern	Killed	43	4	#stat	Implicator[376]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	1	0	#stat	Implicator[376]	['@((a) + (c))']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	43	4	#stat	Implicator[376]	['not_bool']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	1	0	#stat	Implicator[376]	['@((a) + (c))', 'not_bool']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	71	13	#cons	SaveAssignStatement[377]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	71	13	#cons	SaveAssignStatement[377]	['true']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	71	13	#cons	IfStatement[370]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	71	13	#cons	IfStatement[370]	['!((a == b) || (b == c) || (a == c))']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	43	4	#expr	RelationExpression[375]	[]	523	"a==c"
@Pattern	Killed	1	0	#expr	RelationExpression[375]	['(a) + (c)']	523	"a==c"
@Pattern	Killed	43	4	#expr	RelationExpression[375]	['not_bool']	523	"a==c"
@Pattern	Killed	1	0	#expr	RelationExpression[375]	['(a) + (c)', 'not_bool']	523	"a==c"
@Pattern	Killed	30	5	#trap	SaveAssignStatement[377]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	30	5	#trap	SaveAssignStatement[377]	['trapping']	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	43	4	#stat	Implicator[352]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[352]	['@((a) + (b))']	523	"(a==b) || (b==c)"
@Pattern	Killed	43	4	#stat	Implicator[352]	['not_bool']	523	"(a==b) || (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[352]	['@((a) + (b))', 'not_bool']	523	"(a==b) || (b==c)"
@Pattern	Killed	75	9	#cons	SaveAssignStatement[353]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	75	9	#cons	SaveAssignStatement[353]	['true']	523	"(a==b) || (b==c)"
@Pattern	Killed	43	4	#expr	RelationExpression[351]	[]	523	"a==b"
@Pattern	Killed	1	0	#expr	RelationExpression[351]	['(a) + (b)']	523	"a==b"
@Pattern	Killed	43	4	#expr	RelationExpression[351]	['not_bool']	523	"a==b"
@Pattern	Killed	1	0	#expr	RelationExpression[351]	['(a) + (b)', 'not_bool']	523	"a==b"
@Pattern	Killed	30	5	#trap	SaveAssignStatement[353]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	30	5	#trap	SaveAssignStatement[353]	['trapping']	523	"(a==b) || (b==c)"
@Pattern	Killed	43	4	#stat	Implicator[362]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[362]	['@((b) + (c))']	523	"(a==b) || (b==c)"
@Pattern	Killed	43	4	#stat	Implicator[362]	['not_bool']	523	"(a==b) || (b==c)"
@Pattern	Killed	1	0	#stat	Implicator[362]	['@((b) + (c))', 'not_bool']	523	"(a==b) || (b==c)"
@Pattern	Killed	73	11	#cons	SaveAssignStatement[363]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	73	11	#cons	SaveAssignStatement[363]	['true']	523	"(a==b) || (b==c)"
@Pattern	Killed	73	11	#cons	IfStatement[356]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	73	11	#cons	IfStatement[356]	['!((a == b) || (b == c))']	523	"(a==b) || (b==c)"
@Pattern	Killed	43	4	#expr	RelationExpression[361]	[]	523	"b==c"
@Pattern	Killed	1	0	#expr	RelationExpression[361]	['(b) + (c)']	523	"b==c"
@Pattern	Killed	43	4	#expr	RelationExpression[361]	['not_bool']	523	"b==c"
@Pattern	Killed	1	0	#expr	RelationExpression[361]	['(b) + (c)', 'not_bool']	523	"b==c"
@Pattern	Killed	30	5	#trap	SaveAssignStatement[363]	[]	523	"(a==b) || (b==c)"
@Pattern	Killed	30	5	#trap	SaveAssignStatement[363]	['trapping']	523	"(a==b) || (b==c)"
@Pattern	Killed	49	3	#expr	ArithExpression[313]	[]	520	"a+c"
@Pattern	Killed	1	0	#expr	ArithExpression[313]	['((a) + (c)) - ((2) * (c))']	520	"a+c"
@Pattern	Killed	49	3	#expr	ArithExpression[313]	['chg_numb']	520	"a+c"
@Pattern	Killed	1	0	#expr	ArithExpression[313]	['((a) + (c)) - ((2) * (c))', 'chg_numb']	520	"a+c"
@Pattern	Killed	49	3	#expr	ArithExpression[287]	[]	520	"a+b"
@Pattern	Killed	1	0	#expr	ArithExpression[287]	['((a) + (b)) - ((2) * (b))']	520	"a+b"
@Pattern	Killed	49	3	#expr	ArithExpression[287]	['chg_numb']	520	"a+b"
@Pattern	Killed	1	0	#expr	ArithExpression[287]	['((a) + (b)) - ((2) * (b))', 'chg_numb']	520	"a+b"
@Pattern	Killed	49	3	#expr	ArithExpression[298]	[]	520	"b+c"
@Pattern	Killed	1	0	#expr	ArithExpression[298]	['((b) + (c)) - ((2) * (c))']	520	"b+c"
@Pattern	Killed	49	3	#expr	ArithExpression[298]	['chg_numb']	520	"b+c"
@Pattern	Killed	1	0	#expr	ArithExpression[298]	['((b) + (c)) - ((2) * (c))', 'chg_numb']	520	"b+c"
@Pattern	Alive	0	2	#refr	Identifier[275]	[]	519	"c"
@Pattern	Alive	0	2	#refr	Identifier[253]	[]	519	"a"
@Pattern	Alive	0	2	#refr	Identifier[262]	[]	519	"b"
@Pattern	Killed	2	0	#refr	Identifier[314]	[]	520	"b"
@Pattern	Killed	2	0	#refr	Identifier[288]	[]	520	"c"
@Pattern	Killed	2	0	#refr	Identifier[299]	[]	520	"a"
@Pattern	Killed	2	0	#refr	Identifier[311]	[]	520	"a"
@Pattern	Killed	2	0	#refr	Identifier[312]	[]	520	"c"
@Pattern	Killed	2	0	#refr	Identifier[285]	[]	520	"a"
@Pattern	Killed	2	0	#refr	Identifier[286]	[]	520	"b"
@Pattern	Killed	2	0	#refr	Identifier[296]	[]	520	"b"
@Pattern	Killed	2	0	#refr	Identifier[297]	[]	520	"c"
@Pattern	Killed	2	0	#refr	Identifier[323]	[]	521	"a"
@Pattern	Unknown	1	1	#refr	Identifier[324]	[]	521	"b"
@Pattern	Killed	1	0	#refr	Identifier[324]	['a']	521	"b"
@Pattern	Unknown	1	1	#refr	Identifier[324]	['chg_numb']	521	"b"
@Pattern	Killed	1	0	#refr	Identifier[324]	['a', 'chg_numb']	521	"b"
@Pattern	Unknown	1	1	#refr	Identifier[332]	[]	521	"b"
@Pattern	Alive	0	1	#refr	Identifier[332]	['a']	521	"b"
@Pattern	Unknown	1	1	#refr	Identifier[332]	['chg_numb']	521	"b"
@Pattern	Alive	0	1	#refr	Identifier[332]	['a', 'chg_numb']	521	"b"
@Pattern	Killed	2	0	#refr	Identifier[333]	[]	521	"c"
@Pattern	Killed	2	0	#refr	Identifier[373]	[]	523	"a"
@Pattern	Killed	2	0	#refr	Identifier[374]	[]	523	"c"
@Pattern	Killed	2	0	#refr	Identifier[349]	[]	523	"a"
@Pattern	Killed	2	0	#refr	Identifier[350]	[]	523	"b"
@Pattern	Killed	2	0	#refr	Identifier[359]	[]	523	"b"
@Pattern	Killed	2	0	#refr	Identifier[360]	[]	523	"c"
@Pattern	Killed	1	0	#flow	IfEndStatement[280]	[]	519	"(a > 0) && (b > 0) && (c > 0)"
@Pattern	Killed	1	0	#flow	IfEndStatement[318]	[]	520	"(a+b>c) && (b+c>a) && (a+c>b)"
@Pattern	Killed	1	0	#flow	IfEndStatement[337]	[]	521	"(a==b) && (b==c)"
@Pattern	Killed	1	0	#flow	IfEndStatement[378]	[]	523	"(a==b) || (b==c) || (a==c)"
@Pattern	Killed	29	13	#cons	ReturnAssignStatement[417]	[]	529	"return -1;"
@Pattern	Killed	29	13	#cons	ReturnAssignStatement[417]	['true']	529	"return -1;"
@Pattern	Killed	12	4	#trap	ReturnAssignStatement[417]	[]	529	"return -1;"
@Pattern	Killed	12	4	#trap	ReturnAssignStatement[417]	['trapping']	529	"return -1;"
@Pattern	Killed	29	13	#cons	ReturnAssignStatement[406]	[]	527	"return -1;"
@Pattern	Killed	29	13	#cons	ReturnAssignStatement[406]	['true']	527	"return -1;"
@Pattern	Killed	12	4	#trap	ReturnAssignStatement[406]	[]	527	"return -1;"
@Pattern	Killed	12	4	#trap	ReturnAssignStatement[406]	['trapping']	527	"return -1;"
@Pattern	Killed	20	6	#cons	ReturnAssignStatement[344]	[]	522	"return 0;"
@Pattern	Killed	20	6	#cons	ReturnAssignStatement[344]	['true']	522	"return 0;"
@Pattern	Killed	8	3	#trap	ReturnAssignStatement[344]	[]	522	"return 0;"
@Pattern	Killed	8	3	#trap	ReturnAssignStatement[344]	['trapping']	522	"return 0;"
@Pattern	Killed	23	3	#cons	ReturnAssignStatement[385]	[]	524	"return 1;"
@Pattern	Killed	23	3	#cons	ReturnAssignStatement[385]	['true']	524	"return 1;"
@Pattern	Killed	9	2	#trap	ReturnAssignStatement[385]	[]	524	"return 1;"
@Pattern	Killed	9	2	#trap	ReturnAssignStatement[385]	['trapping']	524	"return 1;"
@Pattern	Killed	23	3	#cons	ReturnAssignStatement[392]	[]	525	"return 2;"
@Pattern	Killed	23	3	#cons	ReturnAssignStatement[392]	['true']	525	"return 2;"
@Pattern	Killed	9	2	#trap	ReturnAssignStatement[392]	[]	525	"return 2;"
@Pattern	Killed	9	2	#trap	ReturnAssignStatement[392]	['trapping']	525	"return 2;"
@Pattern	Killed	8	4	#expr	Identifier[275]	[]	519	"c"
@Pattern	Unknown	1	1	#expr	Identifier[275]	['(c) + (1)']	519	"c"
@Pattern	Unknown	1	1	#expr	Identifier[275]	['(c) + (1)', 'chg_numb']	519	"c"
@Pattern	Unknown	1	1	#expr	Identifier[275]	['(c) + (1)', 'chg_numb', 'inc_value']	519	"c"
@Pattern	Unknown	1	1	#expr	Identifier[275]	['(c) + (1)', 'inc_value']	519	"c"
@Pattern	Killed	8	4	#expr	Identifier[275]	['chg_numb']	519	"c"
@Pattern	Alive	1	3	#expr	Identifier[275]	['chg_numb', 'inc_value']	519	"c"
@Pattern	Alive	1	3	#expr	Identifier[275]	['inc_value']	519	"c"
@Pattern	Killed	4	0	#stat	Identifier[275]	[]	519	"c"
@Pattern	Killed	4	0	#stat	Identifier[253]	[]	519	"a"
@Pattern	Killed	8	4	#expr	Identifier[253]	[]	519	"a"
@Pattern	Unknown	1	1	#expr	Identifier[253]	['(a) + (1)']	519	"a"
@Pattern	Unknown	1	1	#expr	Identifier[253]	['(a) + (1)', 'chg_numb']	519	"a"
@Pattern	Unknown	1	1	#expr	Identifier[253]	['(a) + (1)', 'chg_numb', 'inc_value']	519	"a"
@Pattern	Unknown	1	1	#expr	Identifier[253]	['(a) + (1)', 'inc_value']	519	"a"
@Pattern	Killed	8	4	#expr	Identifier[253]	['chg_numb']	519	"a"
@Pattern	Alive	1	3	#expr	Identifier[253]	['chg_numb', 'inc_value']	519	"a"
@Pattern	Alive	1	3	#expr	Identifier[253]	['inc_value']	519	"a"
@Pattern	Killed	8	4	#expr	Identifier[262]	[]	519	"b"
@Pattern	Unknown	1	1	#expr	Identifier[262]	['(b) + (1)']	519	"b"
@Pattern	Unknown	1	1	#expr	Identifier[262]	['(b) + (1)', 'chg_numb']	519	"b"
@Pattern	Unknown	1	1	#expr	Identifier[262]	['(b) + (1)', 'chg_numb', 'inc_value']	519	"b"
@Pattern	Unknown	1	1	#expr	Identifier[262]	['(b) + (1)', 'inc_value']	519	"b"
@Pattern	Killed	8	4	#expr	Identifier[262]	['chg_numb']	519	"b"
@Pattern	Alive	1	3	#expr	Identifier[262]	['chg_numb', 'inc_value']	519	"b"
@Pattern	Alive	1	3	#expr	Identifier[262]	['inc_value']	519	"b"
@Pattern	Killed	4	0	#stat	Identifier[262]	[]	519	"b"
@Pattern	Killed	11	1	#expr	Identifier[314]	[]	520	"b"
@Pattern	Killed	2	0	#expr	Identifier[314]	['(b) + (1)']	520	"b"
@Pattern	Killed	11	1	#expr	Identifier[314]	['chg_numb']	520	"b"
@Pattern	Killed	2	0	#expr	Identifier[314]	['(b) + (1)', 'chg_numb']	520	"b"
@Pattern	Killed	4	0	#expr	Identifier[314]	['chg_numb', 'inc_value']	520	"b"
@Pattern	Killed	4	0	#expr	Identifier[314]	['inc_value']	520	"b"
@Pattern	Killed	4	0	#stat	Identifier[314]	[]	520	"b"
@Pattern	Killed	4	0	#stat	Identifier[288]	[]	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[288]	[]	520	"c"
@Pattern	Killed	2	0	#expr	Identifier[288]	['(c) + (1)']	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[288]	['chg_numb']	520	"c"
@Pattern	Killed	2	0	#expr	Identifier[288]	['(c) + (1)', 'chg_numb']	520	"c"
@Pattern	Killed	4	0	#expr	Identifier[288]	['chg_numb', 'inc_value']	520	"c"
@Pattern	Killed	4	0	#expr	Identifier[288]	['inc_value']	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[299]	[]	520	"a"
@Pattern	Killed	2	0	#expr	Identifier[299]	['(a) + (1)']	520	"a"
@Pattern	Killed	11	1	#expr	Identifier[299]	['chg_numb']	520	"a"
@Pattern	Killed	2	0	#expr	Identifier[299]	['(a) + (1)', 'chg_numb']	520	"a"
@Pattern	Killed	4	0	#expr	Identifier[299]	['chg_numb', 'inc_value']	520	"a"
@Pattern	Killed	4	0	#expr	Identifier[299]	['inc_value']	520	"a"
@Pattern	Killed	4	0	#stat	Identifier[299]	[]	520	"a"
@Pattern	Killed	4	0	#stat	Identifier[311]	[]	520	"a"
@Pattern	Killed	11	1	#expr	Identifier[311]	[]	520	"a"
@Pattern	Killed	2	0	#expr	Identifier[311]	['(a) + (1)']	520	"a"
@Pattern	Killed	11	1	#expr	Identifier[311]	['chg_numb']	520	"a"
@Pattern	Killed	2	0	#expr	Identifier[311]	['(a) + (1)', 'chg_numb']	520	"a"
@Pattern	Killed	4	0	#expr	Identifier[311]	['chg_numb', 'inc_value']	520	"a"
@Pattern	Killed	4	0	#expr	Identifier[311]	['inc_value']	520	"a"
@Pattern	Killed	4	0	#stat	Identifier[312]	[]	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[312]	[]	520	"c"
@Pattern	Killed	2	0	#expr	Identifier[312]	['(c) + (1)']	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[312]	['chg_numb']	520	"c"
@Pattern	Killed	2	0	#expr	Identifier[312]	['(c) + (1)', 'chg_numb']	520	"c"
@Pattern	Killed	4	0	#expr	Identifier[312]	['chg_numb', 'inc_value']	520	"c"
@Pattern	Killed	4	0	#expr	Identifier[312]	['inc_value']	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[285]	[]	520	"a"
@Pattern	Killed	2	0	#expr	Identifier[285]	['(a) + (1)']	520	"a"
@Pattern	Killed	11	1	#expr	Identifier[285]	['chg_numb']	520	"a"
@Pattern	Killed	2	0	#expr	Identifier[285]	['(a) + (1)', 'chg_numb']	520	"a"
@Pattern	Killed	4	0	#expr	Identifier[285]	['chg_numb', 'inc_value']	520	"a"
@Pattern	Killed	4	0	#expr	Identifier[285]	['inc_value']	520	"a"
@Pattern	Killed	4	0	#stat	Identifier[285]	[]	520	"a"
@Pattern	Killed	4	0	#stat	Identifier[286]	[]	520	"b"
@Pattern	Killed	11	1	#expr	Identifier[286]	[]	520	"b"
@Pattern	Killed	2	0	#expr	Identifier[286]	['(b) + (1)']	520	"b"
@Pattern	Killed	11	1	#expr	Identifier[286]	['chg_numb']	520	"b"
@Pattern	Killed	2	0	#expr	Identifier[286]	['(b) + (1)', 'chg_numb']	520	"b"
@Pattern	Killed	4	0	#expr	Identifier[286]	['chg_numb', 'inc_value']	520	"b"
@Pattern	Killed	4	0	#expr	Identifier[286]	['inc_value']	520	"b"
@Pattern	Killed	4	0	#stat	Identifier[296]	[]	520	"b"
@Pattern	Killed	11	1	#expr	Identifier[296]	[]	520	"b"
@Pattern	Killed	2	0	#expr	Identifier[296]	['(b) + (1)']	520	"b"
@Pattern	Killed	11	1	#expr	Identifier[296]	['chg_numb']	520	"b"
@Pattern	Killed	2	0	#expr	Identifier[296]	['(b) + (1)', 'chg_numb']	520	"b"
@Pattern	Killed	4	0	#expr	Identifier[296]	['chg_numb', 'inc_value']	520	"b"
@Pattern	Killed	4	0	#expr	Identifier[296]	['inc_value']	520	"b"
@Pattern	Killed	4	0	#stat	Identifier[297]	[]	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[297]	[]	520	"c"
@Pattern	Killed	2	0	#expr	Identifier[297]	['(c) + (1)']	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[297]	['chg_numb']	520	"c"
@Pattern	Killed	2	0	#expr	Identifier[297]	['(c) + (1)', 'chg_numb']	520	"c"
@Pattern	Killed	4	0	#expr	Identifier[297]	['chg_numb', 'inc_value']	520	"c"
@Pattern	Killed	4	0	#expr	Identifier[297]	['inc_value']	520	"c"
@Pattern	Killed	11	1	#expr	Identifier[323]	[]	521	"a"
@Pattern	Killed	2	0	#expr	Identifier[323]	['(a) + (1)']	521	"a"
@Pattern	Killed	11	1	#expr	Identifier[323]	['chg_numb']	521	"a"
@Pattern	Killed	2	0	#expr	Identifier[323]	['(a) + (1)', 'chg_numb']	521	"a"
@Pattern	Killed	4	0	#expr	Identifier[323]	['chg_numb', 'inc_value']	521	"a"
@Pattern	Killed	4	0	#expr	Identifier[323]	['inc_value']	521	"a"
@Pattern	Killed	4	0	#stat	Identifier[323]	[]	521	"a"
@Pattern	Killed	4	0	#stat	Identifier[324]	[]	521	"b"
@Pattern	Killed	11	1	#expr	Identifier[324]	[]	521	"b"
@Pattern	Killed	2	0	#expr	Identifier[324]	['(b) + (1)']	521	"b"
@Pattern	Killed	11	1	#expr	Identifier[324]	['chg_numb']	521	"b"
@Pattern	Killed	2	0	#expr	Identifier[324]	['(b) + (1)', 'chg_numb']	521	"b"
@Pattern	Killed	4	0	#expr	Identifier[324]	['chg_numb', 'inc_value']	521	"b"
@Pattern	Killed	4	0	#expr	Identifier[324]	['inc_value']	521	"b"
@Pattern	Killed	4	0	#stat	Identifier[332]	[]	521	"b"
@Pattern	Killed	11	1	#expr	Identifier[332]	[]	521	"b"
@Pattern	Killed	2	0	#expr	Identifier[332]	['(b) + (1)']	521	"b"
@Pattern	Killed	11	1	#expr	Identifier[332]	['chg_numb']	521	"b"
@Pattern	Killed	2	0	#expr	Identifier[332]	['(b) + (1)', 'chg_numb']	521	"b"
@Pattern	Killed	4	0	#expr	Identifier[332]	['chg_numb', 'inc_value']	521	"b"
@Pattern	Killed	4	0	#expr	Identifier[332]	['inc_value']	521	"b"
@Pattern	Unknown	2	2	#stat	Identifier[333]	[]	521	"c"
@Pattern	Unknown	1	1	#stat	Identifier[333]	['(c) + (1)']	521	"c"
@Pattern	Unknown	1	1	#stat	Identifier[333]	['(c) + (1)', 'chg_numb']	521	"c"
@Pattern	Unknown	1	1	#stat	Identifier[333]	['(c) + (1)', 'chg_numb', 'inc_value']	521	"c"
@Pattern	Unknown	1	1	#stat	Identifier[333]	['(c) + (1)', 'inc_value']	521	"c"
@Pattern	Unknown	2	2	#stat	Identifier[333]	['chg_numb']	521	"c"
@Pattern	Unknown	1	1	#stat	Identifier[333]	['chg_numb', 'inc_value']	521	"c"
@Pattern	Unknown	1	1	#stat	Identifier[333]	['inc_value']	521	"c"
@Pattern	Killed	11	1	#expr	Identifier[333]	[]	521	"c"
@Pattern	Killed	2	0	#expr	Identifier[333]	['(c) + (1)']	521	"c"
@Pattern	Killed	11	1	#expr	Identifier[333]	['chg_numb']	521	"c"
@Pattern	Killed	2	0	#expr	Identifier[333]	['(c) + (1)', 'chg_numb']	521	"c"
@Pattern	Killed	4	0	#expr	Identifier[333]	['chg_numb', 'inc_value']	521	"c"
@Pattern	Killed	4	0	#expr	Identifier[333]	['inc_value']	521	"c"
@Pattern	Killed	11	1	#expr	Identifier[373]	[]	523	"a"
@Pattern	Killed	2	0	#expr	Identifier[373]	['(a) + (1)']	523	"a"
@Pattern	Killed	11	1	#expr	Identifier[373]	['chg_numb']	523	"a"
@Pattern	Killed	2	0	#expr	Identifier[373]	['(a) + (1)', 'chg_numb']	523	"a"
@Pattern	Killed	4	0	#expr	Identifier[373]	['chg_numb', 'inc_value']	523	"a"
@Pattern	Killed	4	0	#expr	Identifier[373]	['inc_value']	523	"a"
@Pattern	Unknown	2	2	#stat	Identifier[373]	[]	523	"a"
@Pattern	Unknown	1	1	#stat	Identifier[373]	['(a) + (1)']	523	"a"
@Pattern	Unknown	1	1	#stat	Identifier[373]	['(a) + (1)', 'chg_numb']	523	"a"
@Pattern	Unknown	1	1	#stat	Identifier[373]	['(a) + (1)', 'chg_numb', 'inc_value']	523	"a"
@Pattern	Unknown	1	1	#stat	Identifier[373]	['(a) + (1)', 'inc_value']	523	"a"
@Pattern	Unknown	2	2	#stat	Identifier[373]	['chg_numb']	523	"a"
@Pattern	Unknown	1	1	#stat	Identifier[373]	['chg_numb', 'inc_value']	523	"a"
@Pattern	Unknown	1	1	#stat	Identifier[373]	['inc_value']	523	"a"
@Pattern	Unknown	2	2	#stat	Identifier[374]	[]	523	"c"
@Pattern	Unknown	1	1	#stat	Identifier[374]	['(c) + (1)']	523	"c"
@Pattern	Unknown	1	1	#stat	Identifier[374]	['(c) + (1)', 'chg_numb']	523	"c"
@Pattern	Unknown	1	1	#stat	Identifier[374]	['(c) + (1)', 'chg_numb', 'inc_value']	523	"c"
@Pattern	Unknown	1	1	#stat	Identifier[374]	['(c) + (1)', 'inc_value']	523	"c"
@Pattern	Unknown	2	2	#stat	Identifier[374]	['chg_numb']	523	"c"
@Pattern	Unknown	1	1	#stat	Identifier[374]	['chg_numb', 'inc_value']	523	"c"
@Pattern	Unknown	1	1	#stat	Identifier[374]	['inc_value']	523	"c"
@Pattern	Killed	11	1	#expr	Identifier[374]	[]	523	"c"
@Pattern	Killed	2	0	#expr	Identifier[374]	['(c) + (1)']	523	"c"
@Pattern	Killed	11	1	#expr	Identifier[374]	['chg_numb']	523	"c"
@Pattern	Killed	2	0	#expr	Identifier[374]	['(c) + (1)', 'chg_numb']	523	"c"
@Pattern	Killed	4	0	#expr	Identifier[374]	['chg_numb', 'inc_value']	523	"c"
@Pattern	Killed	4	0	#expr	Identifier[374]	['inc_value']	523	"c"
@Pattern	Killed	4	0	#stat	Identifier[349]	[]	523	"a"
@Pattern	Killed	11	1	#expr	Identifier[349]	[]	523	"a"
@Pattern	Killed	2	0	#expr	Identifier[349]	['(a) + (1)']	523	"a"
@Pattern	Killed	11	1	#expr	Identifier[349]	['chg_numb']	523	"a"
@Pattern	Killed	2	0	#expr	Identifier[349]	['(a) + (1)', 'chg_numb']	523	"a"
@Pattern	Killed	4	0	#expr	Identifier[349]	['chg_numb', 'inc_value']	523	"a"
@Pattern	Killed	4	0	#expr	Identifier[349]	['inc_value']	523	"a"
@Pattern	Killed	4	0	#stat	Identifier[350]	[]	523	"b"
@Pattern	Killed	11	1	#expr	Identifier[350]	[]	523	"b"
@Pattern	Killed	2	0	#expr	Identifier[350]	['(b) + (1)']	523	"b"
@Pattern	Killed	11	1	#expr	Identifier[350]	['chg_numb']	523	"b"
@Pattern	Killed	2	0	#expr	Identifier[350]	['(b) + (1)', 'chg_numb']	523	"b"
@Pattern	Killed	4	0	#expr	Identifier[350]	['chg_numb', 'inc_value']	523	"b"
@Pattern	Killed	4	0	#expr	Identifier[350]	['inc_value']	523	"b"
@Pattern	Killed	11	1	#expr	Identifier[359]	[]	523	"b"
@Pattern	Killed	2	0	#expr	Identifier[359]	['(b) + (1)']	523	"b"
@Pattern	Killed	11	1	#expr	Identifier[359]	['chg_numb']	523	"b"
@Pattern	Killed	2	0	#expr	Identifier[359]	['(b) + (1)', 'chg_numb']	523	"b"
@Pattern	Killed	4	0	#expr	Identifier[359]	['chg_numb', 'inc_value']	523	"b"
@Pattern	Killed	4	0	#expr	Identifier[359]	['inc_value']	523	"b"
@Pattern	Unknown	2	2	#stat	Identifier[359]	[]	523	"b"
@Pattern	Unknown	1	1	#stat	Identifier[359]	['(b) + (1)']	523	"b"
@Pattern	Unknown	1	1	#stat	Identifier[359]	['(b) + (1)', 'chg_numb']	523	"b"
@Pattern	Unknown	1	1	#stat	Identifier[359]	['(b) + (1)', 'chg_numb', 'inc_value']	523	"b"
@Pattern	Unknown	1	1	#stat	Identifier[359]	['(b) + (1)', 'inc_value']	523	"b"
@Pattern	Unknown	2	2	#stat	Identifier[359]	['chg_numb']	523	"b"
@Pattern	Unknown	1	1	#stat	Identifier[359]	['chg_numb', 'inc_value']	523	"b"
@Pattern	Unknown	1	1	#stat	Identifier[359]	['inc_value']	523	"b"
@Pattern	Killed	11	1	#expr	Identifier[360]	[]	523	"c"
@Pattern	Killed	2	0	#expr	Identifier[360]	['(c) + (1)']	523	"c"
@Pattern	Killed	11	1	#expr	Identifier[360]	['chg_numb']	523	"c"
@Pattern	Killed	2	0	#expr	Identifier[360]	['(c) + (1)', 'chg_numb']	523	"c"
@Pattern	Killed	4	0	#expr	Identifier[360]	['chg_numb', 'inc_value']	523	"c"
@Pattern	Killed	4	0	#expr	Identifier[360]	['inc_value']	523	"c"
@Pattern	Killed	4	0	#stat	Identifier[360]	[]	523	"c"
@Pattern	Killed	17	9	#expr	ArithExpression[415]	[]	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'chg_numb']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'chg_numb', 'inc_value']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'chg_numb', 'inc_value', 'set_pos']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'chg_numb', 'set_pos']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'inc_value']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'inc_value', 'set_pos']	529	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[415]	['-(-(1))', 'set_pos']	529	"-1"
@Pattern	Killed	17	9	#expr	ArithExpression[415]	['chg_numb']	529	"-1"
@Pattern	Killed	17	2	#expr	ArithExpression[415]	['chg_numb', 'inc_value']	529	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[415]	['chg_numb', 'inc_value', 'set_pos']	529	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[415]	['chg_numb', 'set_pos']	529	"-1"
@Pattern	Killed	17	2	#expr	ArithExpression[415]	['inc_value']	529	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[415]	['inc_value', 'set_pos']	529	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[415]	['set_pos']	529	"-1"
@Pattern	Killed	17	9	#stat	ReturnPoint[416]	[]	529	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[416]	['@(-(-(1)))']	529	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[416]	['@(-(-(1)))', 'chg_numb']	529	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[416]	['@(-(-(1)))', 'chg_numb', 'set_pos']	529	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[416]	['@(-(-(1)))', 'set_pos']	529	"return"
@Pattern	Killed	17	9	#stat	ReturnPoint[416]	['chg_numb']	529	"return"
@Pattern	Killed	12	2	#stat	ReturnPoint[416]	['chg_numb', 'set_pos']	529	"return"
@Pattern	Killed	12	2	#stat	ReturnPoint[416]	['set_pos']	529	"return"
@Pattern	Killed	7	5	#expr	ConstExpression[414]	[]	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'chg_numb']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'chg_numb', 'dec_value']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'chg_numb', 'set_neg']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'dec_value']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'dec_value', 'set_neg']	529	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(1)', 'set_neg']	529	"1"
@Pattern	Killed	7	5	#expr	ConstExpression[414]	['chg_numb']	529	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[414]	['chg_numb', 'dec_value']	529	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[414]	['chg_numb', 'dec_value', 'set_neg']	529	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[414]	['chg_numb', 'set_neg']	529	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[414]	['dec_value']	529	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[414]	['dec_value', 'set_neg']	529	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[414]	['set_neg']	529	"1"
@Pattern	Alive	5	7	#expr	ConstExpression[276]	[]	519	"0"
@Pattern	Alive	0	3	#expr	ConstExpression[276]	['-(0)']	519	"0"
@Pattern	Alive	5	7	#expr	ConstExpression[254]	[]	519	"0"
@Pattern	Alive	0	3	#expr	ConstExpression[254]	['-(0)']	519	"0"
@Pattern	Alive	5	7	#expr	ConstExpression[263]	[]	519	"0"
@Pattern	Alive	0	3	#expr	ConstExpression[263]	['-(0)']	519	"0"
@Pattern	Killed	17	9	#expr	ArithExpression[404]	[]	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'chg_numb']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'chg_numb', 'inc_value']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'chg_numb', 'inc_value', 'set_pos']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'chg_numb', 'set_pos']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'inc_value']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'inc_value', 'set_pos']	527	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[404]	['-(-(1))', 'set_pos']	527	"-1"
@Pattern	Killed	17	9	#expr	ArithExpression[404]	['chg_numb']	527	"-1"
@Pattern	Killed	17	2	#expr	ArithExpression[404]	['chg_numb', 'inc_value']	527	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[404]	['chg_numb', 'inc_value', 'set_pos']	527	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[404]	['chg_numb', 'set_pos']	527	"-1"
@Pattern	Killed	17	2	#expr	ArithExpression[404]	['inc_value']	527	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[404]	['inc_value', 'set_pos']	527	"-1"
@Pattern	Killed	12	2	#expr	ArithExpression[404]	['set_pos']	527	"-1"
@Pattern	Killed	17	9	#stat	ReturnPoint[405]	[]	527	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[405]	['@(-(-(1)))']	527	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[405]	['@(-(-(1)))', 'chg_numb']	527	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[405]	['@(-(-(1)))', 'chg_numb', 'set_pos']	527	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[405]	['@(-(-(1)))', 'set_pos']	527	"return"
@Pattern	Killed	17	9	#stat	ReturnPoint[405]	['chg_numb']	527	"return"
@Pattern	Killed	12	2	#stat	ReturnPoint[405]	['chg_numb', 'set_pos']	527	"return"
@Pattern	Killed	12	2	#stat	ReturnPoint[405]	['set_pos']	527	"return"
@Pattern	Killed	7	5	#expr	ConstExpression[403]	[]	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'chg_numb']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'chg_numb', 'dec_value']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'chg_numb', 'set_neg']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'dec_value']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'dec_value', 'set_neg']	527	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[403]	['-(1)', 'set_neg']	527	"1"
@Pattern	Killed	7	5	#expr	ConstExpression[403]	['chg_numb']	527	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[403]	['chg_numb', 'dec_value']	527	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[403]	['chg_numb', 'dec_value', 'set_neg']	527	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[403]	['chg_numb', 'set_neg']	527	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[403]	['dec_value']	527	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[403]	['dec_value', 'set_neg']	527	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[403]	['set_neg']	527	"1"
@Pattern	Killed	12	3	#stat	ReturnPoint[343]	[]	522	"return"
@Pattern	Alive	0	3	#stat	ReturnPoint[343]	['@(-(0))']	522	"return"
@Pattern	Killed	12	3	#stat	ReturnPoint[343]	['chg_numb']	522	"return"
@Pattern	Alive	0	3	#stat	ReturnPoint[343]	['@(-(0))', 'chg_numb']	522	"return"
@Pattern	Alive	0	3	#stat	ReturnPoint[343]	['chg_numb', 'set_zro']	522	"return"
@Pattern	Alive	0	3	#stat	ReturnPoint[343]	['set_zro']	522	"return"
@Pattern	Killed	12	3	#expr	ConstExpression[342]	[]	522	"0"
@Pattern	Alive	0	3	#expr	ConstExpression[342]	['-(0)']	522	"0"
@Pattern	Killed	14	1	#stat	ReturnPoint[384]	[]	524	"return"
@Pattern	Killed	3	1	#stat	ReturnPoint[384]	['@(-(1))']	524	"return"
@Pattern	Killed	3	1	#stat	ReturnPoint[384]	['@(-(1))', 'chg_numb']	524	"return"
@Pattern	Killed	3	1	#stat	ReturnPoint[384]	['@(-(1))', 'chg_numb', 'set_neg']	524	"return"
@Pattern	Killed	3	1	#stat	ReturnPoint[384]	['@(-(1))', 'set_neg']	524	"return"
@Pattern	Killed	14	1	#stat	ReturnPoint[384]	['chg_numb']	524	"return"
@Pattern	Killed	6	1	#stat	ReturnPoint[384]	['chg_numb', 'set_neg']	524	"return"
@Pattern	Killed	6	1	#stat	ReturnPoint[384]	['set_neg']	524	"return"
@Pattern	Killed	14	1	#expr	ConstExpression[383]	[]	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'chg_numb']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'chg_numb', 'dec_value']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'chg_numb', 'set_neg']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'dec_value']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'dec_value', 'set_neg']	524	"1"
@Pattern	Killed	3	1	#expr	ConstExpression[383]	['-(1)', 'set_neg']	524	"1"
@Pattern	Killed	14	1	#expr	ConstExpression[383]	['chg_numb']	524	"1"
@Pattern	Killed	9	1	#expr	ConstExpression[383]	['chg_numb', 'dec_value']	524	"1"
@Pattern	Killed	6	1	#expr	ConstExpression[383]	['chg_numb', 'dec_value', 'set_neg']	524	"1"
@Pattern	Killed	6	1	#expr	ConstExpression[383]	['chg_numb', 'set_neg']	524	"1"
@Pattern	Killed	9	1	#expr	ConstExpression[383]	['dec_value']	524	"1"
@Pattern	Killed	6	1	#expr	ConstExpression[383]	['dec_value', 'set_neg']	524	"1"
@Pattern	Killed	6	1	#expr	ConstExpression[383]	['set_neg']	524	"1"
@Pattern	Killed	14	1	#stat	ReturnPoint[391]	[]	525	"return"
@Pattern	Killed	2	1	#stat	ReturnPoint[391]	['@(-(2))']	525	"return"
@Pattern	Killed	2	1	#stat	ReturnPoint[391]	['@(-(2))', 'chg_numb']	525	"return"
@Pattern	Killed	2	1	#stat	ReturnPoint[391]	['@(-(2))', 'chg_numb', 'set_neg']	525	"return"
@Pattern	Killed	2	1	#stat	ReturnPoint[391]	['@(-(2))', 'set_neg']	525	"return"
@Pattern	Killed	14	1	#stat	ReturnPoint[391]	['chg_numb']	525	"return"
@Pattern	Killed	5	1	#stat	ReturnPoint[391]	['chg_numb', 'set_neg']	525	"return"
@Pattern	Killed	5	1	#stat	ReturnPoint[391]	['set_neg']	525	"return"
@Pattern	Killed	14	1	#expr	ConstExpression[390]	[]	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'chg_numb']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'chg_numb', 'dec_value']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'chg_numb', 'dec_value', 'set_neg']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'chg_numb', 'set_neg']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'dec_value']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'dec_value', 'set_neg']	525	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[390]	['-(2)', 'set_neg']	525	"2"
@Pattern	Killed	14	1	#expr	ConstExpression[390]	['chg_numb']	525	"2"
@Pattern	Killed	11	1	#expr	ConstExpression[390]	['chg_numb', 'dec_value']	525	"2"
@Pattern	Killed	5	1	#expr	ConstExpression[390]	['chg_numb', 'dec_value', 'set_neg']	525	"2"
@Pattern	Killed	5	1	#expr	ConstExpression[390]	['chg_numb', 'set_neg']	525	"2"
@Pattern	Killed	11	1	#expr	ConstExpression[390]	['dec_value']	525	"2"
@Pattern	Killed	5	1	#expr	ConstExpression[390]	['dec_value', 'set_neg']	525	"2"
@Pattern	Killed	5	1	#expr	ConstExpression[390]	['set_neg']	525	"2"
@Pattern	Killed	1	0	#trap	IfStatement[282]	[]	519	"if((a > 0) && (b > 0) && (c > 0)) {         if((a+b>c) && (b+c>a) && (a+c>b)) {             if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;         }         else return -1;     }     else return -1;"
@Pattern	Killed	1	0	#trap	IfStatement[320]	[]	520	"if((a+b>c) && (b+c>a) && (a+c>b)) {             if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;         }         else return -1;"
@Pattern	Killed	1	0	#trap	IfStatement[339]	[]	521	"if((a==b) && (b==c))                 return 0;             else if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;"
@Pattern	Killed	1	0	#trap	IfStatement[380]	[]	523	"if((a==b) || (b==c) || (a==c))                 return 1;             else return 2;"
@Pattern	Killed	43	4	#expr	RelationExpression[448]	[]	536	"argc > 3"
@Pattern	Killed	1	0	#expr	RelationExpression[448]	['(argc) + (3)']	536	"argc > 3"
@Pattern	Killed	43	4	#expr	RelationExpression[448]	['not_bool']	536	"argc > 3"
@Pattern	Killed	1	0	#expr	RelationExpression[448]	['(argc) + (3)', 'not_bool']	536	"argc > 3"
@Pattern	Killed	33	5	#trap	IfStatement[449]	[]	536	"if(argc > 3)     {         x = atoi(argv[1]);         y = atoi(argv[2]);         z = atoi(argv[3]);         t = triangle(x,y,z);         switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }         return 0;     }     else     {      fprintf(stderr, "Invalid usage: a.exe x y z\n");      return -1;     }"
@Pattern	Killed	33	5	#trap	IfStatement[449]	['trapping']	536	"if(argc > 3)     {         x = atoi(argv[1]);         y = atoi(argv[2]);         z = atoi(argv[3]);         t = triangle(x,y,z);         switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }         return 0;     }     else     {      fprintf(stderr, "Invalid usage: a.exe x y z\n");      return -1;     }"
@Pattern	Killed	4	0	#refr	Identifier[446]	[]	536	"argc"
@Pattern	Killed	30	2	#cons	SaveAssignStatement[513]	[]	542	"switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }"
@Pattern	Killed	2	0	#cons	SaveAssignStatement[513]	['(t) != (argc)']	542	"switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }"
@Pattern	Killed	4	0	#refr	Identifier[511]	[]	542	"t"
@Pattern	Killed	16	0	#stat	Implicator[512]	[]	542	"switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }"
@Pattern	Killed	127	26	#cons	WaitAssignStatement[507]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	127	26	#cons	WaitAssignStatement[507]	['true']	541	"triangle(x,y,z)"
@Pattern	Killed	13	0	#trap	SaveAssignStatement[513]	[]	542	"switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }"
@Pattern	Killed	48	0	#expr	WaitExpression[505]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	4	0	#refr	Identifier[500]	[]	541	"x"
@Pattern	Killed	48	0	#stat	Implicator[506]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	28	0	#trap	CallStatement[503]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	4	0	#refr	Identifier[501]	[]	541	"y"
@Pattern	Killed	4	0	#refr	Identifier[502]	[]	541	"z"
@Pattern	Killed	1	0	#cons	InitAssignStatement[445]	[]	535	"t"
@Pattern	Killed	1	0	#flow	InitAssignStatement[445]	[]	535	"t"
@Pattern	Killed	2	0	#flow	IfStatement[449]	[]	536	"if(argc > 3)     {         x = atoi(argv[1]);         y = atoi(argv[2]);         z = atoi(argv[3]);         t = triangle(x,y,z);         switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }         return 0;     }     else     {      fprintf(stderr, "Invalid usage: a.exe x y z\n");      return -1;     }"
@Pattern	Killed	21	3	#cons	CallStatement[459]	[]	538	"atoi(argv[1])"
@Pattern	Killed	21	3	#cons	CallStatement[459]	['true']	538	"atoi(argv[1])"
@Pattern	Killed	5	0	#trap	WaitAssignStatement[463]	[]	538	"atoi(argv[1])"
@Pattern	Killed	17	1	#cons	WaitAssignStatement[463]	[]	538	"atoi(argv[1])"
@Pattern	Killed	17	1	#cons	WaitAssignStatement[463]	['true']	538	"atoi(argv[1])"
@Pattern	Killed	20	3	#cons	CallStatement[474]	[]	539	"atoi(argv[2])"
@Pattern	Killed	20	3	#cons	CallStatement[474]	['true']	539	"atoi(argv[2])"
@Pattern	Killed	1	0	#flow	BinAssignStatement[465]	[]	538	"x = atoi(argv[1])"
@Pattern	Killed	16	2	#cons	BinAssignStatement[465]	[]	538	"x = atoi(argv[1])"
@Pattern	Killed	16	2	#cons	BinAssignStatement[465]	['true']	538	"x = atoi(argv[1])"
@Pattern	Killed	5	0	#trap	WaitAssignStatement[478]	[]	539	"atoi(argv[2])"
@Pattern	Killed	17	1	#cons	WaitAssignStatement[478]	[]	539	"atoi(argv[2])"
@Pattern	Killed	17	1	#cons	WaitAssignStatement[478]	['true']	539	"atoi(argv[2])"
@Pattern	Killed	18	0	#cons	BinAssignStatement[480]	[]	539	"y = atoi(argv[2])"
@Pattern	Killed	20	3	#cons	CallStatement[489]	[]	540	"atoi(argv[3])"
@Pattern	Killed	20	3	#cons	CallStatement[489]	['true']	540	"atoi(argv[3])"
@Pattern	Killed	1	0	#flow	BinAssignStatement[480]	[]	539	"y = atoi(argv[2])"
@Pattern	Killed	5	0	#trap	WaitAssignStatement[493]	[]	540	"atoi(argv[3])"
@Pattern	Killed	17	1	#cons	WaitAssignStatement[493]	[]	540	"atoi(argv[3])"
@Pattern	Killed	17	1	#cons	WaitAssignStatement[493]	['true']	540	"atoi(argv[3])"
@Pattern	Killed	16	2	#cons	BinAssignStatement[495]	[]	540	"z = atoi(argv[3])"
@Pattern	Killed	16	2	#cons	BinAssignStatement[495]	['true']	540	"z = atoi(argv[3])"
@Pattern	Killed	1	0	#flow	BinAssignStatement[495]	[]	540	"z = atoi(argv[3])"
@Pattern	Killed	5	0	#trap	WaitAssignStatement[507]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	1	0	#flow	BinAssignStatement[509]	[]	541	"t = triangle(x,y,z)"
@Pattern	Killed	16	2	#cons	BinAssignStatement[509]	[]	541	"t = triangle(x,y,z)"
@Pattern	Killed	16	2	#cons	BinAssignStatement[509]	['true']	541	"t = triangle(x,y,z)"
@Pattern	Killed	3	0	#cons	CallStatement[588]	[]	561	"fprintf(stderr, "Invalid usage: a.exe x y z\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[592]	[]	561	"fprintf(stderr, "Invalid usage: a.exe x y z\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[592]	['trapping']	561	"fprintf(stderr, "Invalid usage: a.exe x y z\n")"
@Pattern	Killed	3	2	#cons	WaitAssignStatement[592]	[]	561	"fprintf(stderr, "Invalid usage: a.exe x y z\n")"
@Pattern	Killed	3	2	#cons	WaitAssignStatement[592]	['true']	561	"fprintf(stderr, "Invalid usage: a.exe x y z\n")"
@Pattern	Killed	36	10	#cons	CaseStatement[519]	[]	544	"case 0:"
@Pattern	Killed	4	1	#cons	CaseStatement[519]	['true']	544	"case 0:"
@Pattern	Killed	1	0	#flow	GotoStatement[514]	[]	542	"switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }"
@Pattern	Killed	1	0	#cons	GotoStatement[514]	[]	542	"switch(t)         {             case 0:                 printf("equilateral triangle\n");                 break;             case 1:                 printf("isosceles triangle\n");                 break;             case 2:                 printf("ordinary triangle\n");                 break;             default:                 printf("not the triangle\n");                 break;         }"
@Pattern	Unknown	1	1	#trap	CaseStatement[519]	[]	544	"case 0:"
@Pattern	Unknown	1	1	#trap	CaseStatement[519]	['trapping']	544	"case 0:"
@Pattern	Killed	2	0	#flow	CaseStatement[519]	[]	544	"case 0:"
@Pattern	Killed	2	0	#cons	CallStatement[524]	[]	545	"printf("equilateral triangle\n")"
@Pattern	Killed	4	2	#cons	WaitAssignStatement[528]	[]	545	"printf("equilateral triangle\n")"
@Pattern	Killed	4	2	#cons	WaitAssignStatement[528]	['true']	545	"printf("equilateral triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[528]	[]	545	"printf("equilateral triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[528]	['trapping']	545	"printf("equilateral triangle\n")"
@Pattern	Killed	1	0	#flow	WaitAssignStatement[528]	[]	545	"printf("equilateral triangle\n")"
@Pattern	Killed	2	0	#cons	GotoStatement[530]	[]	546	"break;"
@Pattern	Killed	1	0	#trap	GotoStatement[530]	[]	546	"break;"
@Pattern	Killed	27	7	#cons	CaseStatement[535]	[]	547	"case 1:"
@Pattern	Killed	4	0	#cons	CaseStatement[535]	['true']	547	"case 1:"
@Pattern	Killed	1	0	#trap	CaseStatement[535]	[]	547	"case 1:"
@Pattern	Killed	2	0	#cons	CallStatement[540]	[]	548	"printf("isosceles triangle\n")"
@Pattern	Killed	2	0	#flow	CaseStatement[535]	[]	547	"case 1:"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[544]	[]	548	"printf("isosceles triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[544]	['trapping']	548	"printf("isosceles triangle\n")"
@Pattern	Killed	4	2	#cons	WaitAssignStatement[544]	[]	548	"printf("isosceles triangle\n")"
@Pattern	Killed	4	2	#cons	WaitAssignStatement[544]	['true']	548	"printf("isosceles triangle\n")"
@Pattern	Killed	2	0	#cons	GotoStatement[546]	[]	549	"break;"
@Pattern	Killed	1	0	#flow	WaitAssignStatement[544]	[]	548	"printf("isosceles triangle\n")"
@Pattern	Killed	1	0	#trap	GotoStatement[546]	[]	549	"break;"
@Pattern	Killed	18	5	#cons	CaseStatement[551]	[]	550	"case 2:"
@Pattern	Killed	4	0	#cons	CaseStatement[551]	['true']	550	"case 2:"
@Pattern	Killed	1	0	#trap	CaseStatement[551]	[]	550	"case 2:"
@Pattern	Killed	2	0	#flow	CaseStatement[551]	[]	550	"case 2:"
@Pattern	Killed	2	0	#cons	CallStatement[556]	[]	551	"printf("ordinary triangle\n")"
@Pattern	Killed	4	2	#cons	WaitAssignStatement[560]	[]	551	"printf("ordinary triangle\n")"
@Pattern	Killed	4	2	#cons	WaitAssignStatement[560]	['true']	551	"printf("ordinary triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[560]	[]	551	"printf("ordinary triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[560]	['trapping']	551	"printf("ordinary triangle\n")"
@Pattern	Killed	1	0	#flow	WaitAssignStatement[560]	[]	551	"printf("ordinary triangle\n")"
@Pattern	Killed	2	0	#cons	GotoStatement[562]	[]	552	"break;"
@Pattern	Killed	1	0	#trap	GotoStatement[562]	[]	552	"break;"
@Pattern	Killed	3	0	#cons	DefaultStatement[564]	[]	553	"default:"
@Pattern	Killed	1	0	#trap	DefaultStatement[564]	[]	553	"default:"
@Pattern	Killed	2	0	#cons	CallStatement[568]	[]	554	"printf("not the triangle\n")"
@Pattern	Killed	1	0	#flow	DefaultStatement[564]	[]	553	"default:"
@Pattern	Unknown	3	3	#cons	WaitAssignStatement[572]	[]	554	"printf("not the triangle\n")"
@Pattern	Unknown	3	3	#cons	WaitAssignStatement[572]	['true']	554	"printf("not the triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[572]	[]	554	"printf("not the triangle\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[572]	['trapping']	554	"printf("not the triangle\n")"
@Pattern	Unknown	1	1	#cons	GotoStatement[574]	[]	555	"break;"
@Pattern	Unknown	1	1	#cons	GotoStatement[574]	['true']	555	"break;"
@Pattern	Alive	0	1	#flow	WaitAssignStatement[572]	[]	554	"printf("not the triangle\n")"
@Pattern	Killed	1	0	#trap	GotoStatement[574]	[]	555	"break;"
@Pattern	Alive	7	17	#cons	ReturnAssignStatement[579]	[]	557	"return 0;"
@Pattern	Alive	0	2	#cons	ReturnAssignStatement[579]	['(0) > (0)']	557	"return 0;"
@Pattern	Killed	7	3	#trap	ReturnAssignStatement[579]	[]	557	"return 0;"
@Pattern	Killed	7	3	#trap	ReturnAssignStatement[579]	['trapping']	557	"return 0;"
@Pattern	Killed	11	4	#trap	ReturnAssignStatement[597]	[]	562	"return -1;"
@Pattern	Killed	11	4	#trap	ReturnAssignStatement[597]	['trapping']	562	"return -1;"
@Pattern	Alive	11	29	#cons	ReturnAssignStatement[597]	[]	562	"return -1;"
@Pattern	Alive	0	2	#cons	ReturnAssignStatement[597]	['(-(1)) > (0)']	562	"return -1;"
@Pattern	Killed	8	2	#trap	CallStatement[459]	[]	538	"atoi(argv[1])"
@Pattern	Killed	8	2	#trap	CallStatement[459]	['trapping']	538	"atoi(argv[1])"
@Pattern	Killed	7	2	#trap	CallStatement[474]	[]	539	"atoi(argv[2])"
@Pattern	Killed	7	2	#trap	CallStatement[474]	['trapping']	539	"atoi(argv[2])"
@Pattern	Killed	7	2	#trap	CallStatement[489]	[]	540	"atoi(argv[3])"
@Pattern	Killed	7	2	#trap	CallStatement[489]	['trapping']	540	"atoi(argv[3])"
@Pattern	Killed	2	0	#trap	BinAssignStatement[465]	[]	538	"x = atoi(argv[1])"
@Pattern	Killed	14	2	#expr	Implicator[464]	[]	538	"atoi(argv[1])"
@Pattern	Killed	1	0	#expr	Implicator[464]	['(x) % (atoi(argv[1]))']	538	"atoi(argv[1])"
@Pattern	Killed	14	2	#expr	Implicator[464]	['chg_numb']	538	"atoi(argv[1])"
@Pattern	Killed	1	0	#expr	Implicator[464]	['(x) % (atoi(argv[1]))', 'chg_numb']	538	"atoi(argv[1])"
@Pattern	Killed	14	2	#stat	Identifier[452]	[]	538	"x"
@Pattern	Killed	1	0	#stat	Identifier[452]	['@((x) % (atoi(argv[1])))']	538	"x"
@Pattern	Killed	14	2	#stat	Identifier[452]	['chg_numb']	538	"x"
@Pattern	Killed	1	0	#stat	Identifier[452]	['@((x) % (atoi(argv[1])))', 'chg_numb']	538	"x"
@Pattern	Killed	2	0	#trap	BinAssignStatement[480]	[]	539	"y = atoi(argv[2])"
@Pattern	Killed	16	0	#stat	Identifier[467]	[]	539	"y"
@Pattern	Killed	16	0	#expr	Implicator[479]	[]	539	"atoi(argv[2])"
@Pattern	Killed	2	0	#trap	BinAssignStatement[495]	[]	540	"z = atoi(argv[3])"
@Pattern	Killed	14	2	#expr	Implicator[494]	[]	540	"atoi(argv[3])"
@Pattern	Killed	1	0	#expr	Implicator[494]	['(z) % (atoi(argv[3]))']	540	"atoi(argv[3])"
@Pattern	Killed	14	2	#expr	Implicator[494]	['chg_numb']	540	"atoi(argv[3])"
@Pattern	Killed	1	0	#expr	Implicator[494]	['(z) % (atoi(argv[3]))', 'chg_numb']	540	"atoi(argv[3])"
@Pattern	Killed	14	2	#stat	Identifier[482]	[]	540	"z"
@Pattern	Killed	1	0	#stat	Identifier[482]	['@((z) % (atoi(argv[3])))']	540	"z"
@Pattern	Killed	14	2	#stat	Identifier[482]	['chg_numb']	540	"z"
@Pattern	Killed	1	0	#stat	Identifier[482]	['@((z) % (atoi(argv[3])))', 'chg_numb']	540	"z"
@Pattern	Killed	2	0	#trap	BinAssignStatement[509]	[]	541	"t = triangle(x,y,z)"
@Pattern	Killed	14	2	#stat	Identifier[497]	[]	541	"t"
@Pattern	Killed	1	0	#stat	Identifier[497]	['@((t) % (triangle(x, y, z)))']	541	"t"
@Pattern	Killed	14	2	#stat	Identifier[497]	['chg_numb']	541	"t"
@Pattern	Killed	1	0	#stat	Identifier[497]	['@((t) % (triangle(x, y, z)))', 'chg_numb']	541	"t"
@Pattern	Killed	14	2	#expr	Implicator[508]	[]	541	"triangle(x,y,z)"
@Pattern	Killed	1	0	#expr	Implicator[508]	['(t) % (triangle(x, y, z))']	541	"triangle(x,y,z)"
@Pattern	Killed	14	2	#expr	Implicator[508]	['chg_numb']	541	"triangle(x,y,z)"
@Pattern	Killed	1	0	#expr	Implicator[508]	['(t) % (triangle(x, y, z))', 'chg_numb']	541	"triangle(x,y,z)"
@Pattern	Killed	11	1	#expr	Identifier[446]	[]	536	"argc"
@Pattern	Killed	2	0	#expr	Identifier[446]	['(argc) + (1)']	536	"argc"
@Pattern	Killed	11	1	#expr	Identifier[446]	['chg_numb']	536	"argc"
@Pattern	Killed	2	0	#expr	Identifier[446]	['(argc) + (1)', 'chg_numb']	536	"argc"
@Pattern	Killed	4	0	#expr	Identifier[446]	['chg_numb', 'inc_value']	536	"argc"
@Pattern	Killed	4	0	#expr	Identifier[446]	['inc_value']	536	"argc"
@Pattern	Unknown	2	2	#stat	Identifier[446]	[]	536	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[446]	['(argc) + (1)']	536	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[446]	['(argc) + (1)', 'chg_numb']	536	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[446]	['(argc) + (1)', 'chg_numb', 'inc_value']	536	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[446]	['(argc) + (1)', 'inc_value']	536	"argc"
@Pattern	Unknown	2	2	#stat	Identifier[446]	['chg_numb']	536	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[446]	['chg_numb', 'inc_value']	536	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[446]	['inc_value']	536	"argc"
@Pattern	Unknown	2	2	#stat	Identifier[511]	[]	542	"t"
@Pattern	Unknown	1	1	#stat	Identifier[511]	['(t) + (1)']	542	"t"
@Pattern	Unknown	1	1	#stat	Identifier[511]	['(t) + (1)', 'chg_numb']	542	"t"
@Pattern	Unknown	1	1	#stat	Identifier[511]	['(t) + (1)', 'chg_numb', 'inc_value']	542	"t"
@Pattern	Unknown	1	1	#stat	Identifier[511]	['(t) + (1)', 'inc_value']	542	"t"
@Pattern	Unknown	2	2	#stat	Identifier[511]	['chg_numb']	542	"t"
@Pattern	Unknown	1	1	#stat	Identifier[511]	['chg_numb', 'inc_value']	542	"t"
@Pattern	Unknown	1	1	#stat	Identifier[511]	['inc_value']	542	"t"
@Pattern	Killed	12	0	#expr	Identifier[511]	[]	542	"t"
@Pattern	Unknown	2	2	#stat	Identifier[500]	[]	541	"x"
@Pattern	Unknown	1	1	#stat	Identifier[500]	['(x) + (1)']	541	"x"
@Pattern	Unknown	1	1	#stat	Identifier[500]	['(x) + (1)', 'chg_numb']	541	"x"
@Pattern	Unknown	1	1	#stat	Identifier[500]	['(x) + (1)', 'chg_numb', 'inc_value']	541	"x"
@Pattern	Unknown	1	1	#stat	Identifier[500]	['(x) + (1)', 'inc_value']	541	"x"
@Pattern	Unknown	2	2	#stat	Identifier[500]	['chg_numb']	541	"x"
@Pattern	Unknown	1	1	#stat	Identifier[500]	['chg_numb', 'inc_value']	541	"x"
@Pattern	Unknown	1	1	#stat	Identifier[500]	['inc_value']	541	"x"
@Pattern	Killed	12	0	#expr	Identifier[500]	[]	541	"x"
@Pattern	Unknown	2	2	#stat	Identifier[501]	[]	541	"y"
@Pattern	Unknown	1	1	#stat	Identifier[501]	['(y) + (1)']	541	"y"
@Pattern	Unknown	1	1	#stat	Identifier[501]	['(y) + (1)', 'chg_numb']	541	"y"
@Pattern	Unknown	1	1	#stat	Identifier[501]	['(y) + (1)', 'chg_numb', 'inc_value']	541	"y"
@Pattern	Unknown	1	1	#stat	Identifier[501]	['(y) + (1)', 'inc_value']	541	"y"
@Pattern	Unknown	2	2	#stat	Identifier[501]	['chg_numb']	541	"y"
@Pattern	Unknown	1	1	#stat	Identifier[501]	['chg_numb', 'inc_value']	541	"y"
@Pattern	Unknown	1	1	#stat	Identifier[501]	['inc_value']	541	"y"
@Pattern	Killed	12	0	#expr	Identifier[501]	[]	541	"y"
@Pattern	Unknown	2	2	#stat	Identifier[502]	[]	541	"z"
@Pattern	Unknown	1	1	#stat	Identifier[502]	['(z) + (1)']	541	"z"
@Pattern	Unknown	1	1	#stat	Identifier[502]	['(z) + (1)', 'chg_numb']	541	"z"
@Pattern	Unknown	1	1	#stat	Identifier[502]	['(z) + (1)', 'chg_numb', 'inc_value']	541	"z"
@Pattern	Unknown	1	1	#stat	Identifier[502]	['(z) + (1)', 'inc_value']	541	"z"
@Pattern	Unknown	2	2	#stat	Identifier[502]	['chg_numb']	541	"z"
@Pattern	Unknown	1	1	#stat	Identifier[502]	['chg_numb', 'inc_value']	541	"z"
@Pattern	Unknown	1	1	#stat	Identifier[502]	['inc_value']	541	"z"
@Pattern	Killed	12	0	#expr	Identifier[502]	[]	541	"z"
@Pattern	Killed	12	1	#expr	ConstExpression[447]	[]	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'chg_numb']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'chg_numb', 'dec_value']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'chg_numb', 'dec_value', 'set_neg']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'chg_numb', 'set_neg']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'dec_value']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'dec_value', 'set_neg']	536	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[447]	['-(3)', 'set_neg']	536	"3"
@Pattern	Killed	12	1	#expr	ConstExpression[447]	['chg_numb']	536	"3"
@Pattern	Killed	9	1	#expr	ConstExpression[447]	['chg_numb', 'dec_value']	536	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[447]	['chg_numb', 'dec_value', 'set_neg']	536	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[447]	['chg_numb', 'set_neg']	536	"3"
@Pattern	Killed	9	1	#expr	ConstExpression[447]	['dec_value']	536	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[447]	['dec_value', 'set_neg']	536	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[447]	['set_neg']	536	"3"
@Pattern	Alive	0	14	#expr	ConstExpression[577]	[]	557	"0"
@Pattern	Alive	0	14	#stat	ReturnPoint[578]	[]	557	"return"
@Pattern	Alive	0	25	#stat	ReturnPoint[596]	[]	562	"return"
@Pattern	Alive	0	25	#expr	ArithExpression[595]	[]	562	"-1"
@Pattern	Alive	0	13	#expr	ConstExpression[594]	[]	562	"1"
@Pattern	Killed	12	1	#expr	ConstExpression[456]	[]	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'chg_numb']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'chg_numb', 'dec_value']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'chg_numb', 'set_neg']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'dec_value']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'dec_value', 'set_neg']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[456]	['-(1)', 'set_neg']	538	"1"
@Pattern	Killed	12	1	#expr	ConstExpression[456]	['chg_numb']	538	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[456]	['chg_numb', 'dec_value']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[456]	['chg_numb', 'dec_value', 'set_neg']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[456]	['chg_numb', 'set_neg']	538	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[456]	['dec_value']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[456]	['dec_value', 'set_neg']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[456]	['set_neg']	538	"1"
@Pattern	Killed	12	1	#stat	Implicator[462]	[]	538	"atoi(argv[1])"
@Pattern	Killed	12	1	#stat	Implicator[462]	['@(atoi(*((argv) + (1))))']	538	"atoi(argv[1])"
@Pattern	Killed	12	1	#stat	Implicator[462]	['@(atoi(*((argv) + (1))))', 'chg_numb']	538	"atoi(argv[1])"
@Pattern	Killed	12	1	#stat	Implicator[462]	['chg_numb']	538	"atoi(argv[1])"
@Pattern	Killed	12	1	#expr	WaitExpression[461]	[]	538	"atoi(argv[1])"
@Pattern	Killed	12	1	#expr	WaitExpression[461]	['atoi(*((argv) + (1)))']	538	"atoi(argv[1])"
@Pattern	Killed	12	1	#expr	ArithExpression[457]	[]
@Pattern	Killed	2	1	#expr	ArithExpression[457]	['(argv) + (-(1))']
@Pattern	Killed	2	1	#expr	ArithExpression[457]	['(argv) + (-(1))', 'chg_addr']
@Pattern	Killed	2	1	#expr	ArithExpression[457]	['(argv) + (-(1))', 'chg_addr', 'dec_value']
@Pattern	Killed	2	1	#expr	ArithExpression[457]	['(argv) + (-(1))', 'dec_value']
@Pattern	Killed	12	1	#expr	ArithExpression[457]	['chg_addr']
@Pattern	Killed	7	1	#expr	ArithExpression[457]	['chg_addr', 'dec_value']
@Pattern	Killed	7	1	#expr	ArithExpression[457]	['dec_value']
@Pattern	Killed	12	1	#refr	DeferExpression[458]	[]	538	"argv[1]"
@Pattern	Killed	2	1	#refr	DeferExpression[458]	['*((argv) + (-(1)))']	538	"argv[1]"
@Pattern	Killed	2	1	#refr	DeferExpression[458]	['*((argv) + (-(1)))', 'chg_addr']	538	"argv[1]"
@Pattern	Killed	12	1	#refr	DeferExpression[458]	['chg_addr']	538	"argv[1]"
@Pattern	Killed	12	1	#refr	DeferExpression[473]	[]	539	"argv[2]"
@Pattern	Killed	2	1	#refr	DeferExpression[473]	['*((argv) + (-(2)))']	539	"argv[2]"
@Pattern	Killed	2	1	#refr	DeferExpression[473]	['*((argv) + (-(2)))', 'chg_addr']	539	"argv[2]"
@Pattern	Killed	12	1	#refr	DeferExpression[473]	['chg_addr']	539	"argv[2]"
@Pattern	Killed	12	1	#expr	WaitExpression[476]	[]	539	"atoi(argv[2])"
@Pattern	Killed	12	1	#expr	WaitExpression[476]	['atoi(*((argv) + (2)))']	539	"atoi(argv[2])"
@Pattern	Killed	12	1	#expr	ConstExpression[471]	[]	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'chg_numb']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'chg_numb', 'dec_value']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'chg_numb', 'dec_value', 'set_neg']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'chg_numb', 'set_neg']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'dec_value']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'dec_value', 'set_neg']	539	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[471]	['-(2)', 'set_neg']	539	"2"
@Pattern	Killed	12	1	#expr	ConstExpression[471]	['chg_numb']	539	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[471]	['chg_numb', 'dec_value']	539	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[471]	['chg_numb', 'dec_value', 'set_neg']	539	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[471]	['chg_numb', 'set_neg']	539	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[471]	['dec_value']	539	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[471]	['dec_value', 'set_neg']	539	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[471]	['set_neg']	539	"2"
@Pattern	Killed	12	1	#expr	ArithExpression[472]	[]
@Pattern	Killed	2	1	#expr	ArithExpression[472]	['(argv) + (-(2))']
@Pattern	Killed	2	1	#expr	ArithExpression[472]	['(argv) + (-(2))', 'chg_addr']
@Pattern	Killed	2	1	#expr	ArithExpression[472]	['(argv) + (-(2))', 'chg_addr', 'dec_value']
@Pattern	Killed	2	1	#expr	ArithExpression[472]	['(argv) + (-(2))', 'dec_value']
@Pattern	Killed	12	1	#expr	ArithExpression[472]	['chg_addr']
@Pattern	Killed	8	1	#expr	ArithExpression[472]	['chg_addr', 'dec_value']
@Pattern	Killed	8	1	#expr	ArithExpression[472]	['dec_value']
@Pattern	Killed	12	1	#stat	Implicator[477]	[]	539	"atoi(argv[2])"
@Pattern	Killed	12	1	#stat	Implicator[477]	['@(atoi(*((argv) + (2))))']	539	"atoi(argv[2])"
@Pattern	Killed	12	1	#stat	Implicator[477]	['@(atoi(*((argv) + (2))))', 'chg_numb']	539	"atoi(argv[2])"
@Pattern	Killed	12	1	#stat	Implicator[477]	['chg_numb']	539	"atoi(argv[2])"
@Pattern	Killed	12	1	#expr	ConstExpression[486]	[]	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'chg_numb']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'chg_numb', 'dec_value']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'chg_numb', 'dec_value', 'set_neg']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'chg_numb', 'set_neg']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'dec_value']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'dec_value', 'set_neg']	540	"3"
@Pattern	Killed	2	1	#expr	ConstExpression[486]	['-(3)', 'set_neg']	540	"3"
@Pattern	Killed	12	1	#expr	ConstExpression[486]	['chg_numb']	540	"3"
@Pattern	Killed	9	1	#expr	ConstExpression[486]	['chg_numb', 'dec_value']	540	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[486]	['chg_numb', 'dec_value', 'set_neg']	540	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[486]	['chg_numb', 'set_neg']	540	"3"
@Pattern	Killed	9	1	#expr	ConstExpression[486]	['dec_value']	540	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[486]	['dec_value', 'set_neg']	540	"3"
@Pattern	Killed	3	1	#expr	ConstExpression[486]	['set_neg']	540	"3"
@Pattern	Killed	12	1	#stat	Implicator[492]	[]	540	"atoi(argv[3])"
@Pattern	Killed	12	1	#stat	Implicator[492]	['@(atoi(*((argv) + (3))))']	540	"atoi(argv[3])"
@Pattern	Killed	12	1	#stat	Implicator[492]	['@(atoi(*((argv) + (3))))', 'chg_numb']	540	"atoi(argv[3])"
@Pattern	Killed	12	1	#stat	Implicator[492]	['chg_numb']	540	"atoi(argv[3])"
@Pattern	Killed	12	1	#expr	WaitExpression[491]	[]	540	"atoi(argv[3])"
@Pattern	Killed	12	1	#expr	WaitExpression[491]	['atoi(*((argv) + (3)))']	540	"atoi(argv[3])"
@Pattern	Killed	12	1	#refr	DeferExpression[488]	[]	540	"argv[3]"
@Pattern	Killed	2	1	#refr	DeferExpression[488]	['*((argv) + (-(3)))']	540	"argv[3]"
@Pattern	Killed	2	1	#refr	DeferExpression[488]	['*((argv) + (-(3)))', 'chg_addr']	540	"argv[3]"
@Pattern	Killed	12	1	#refr	DeferExpression[488]	['chg_addr']	540	"argv[3]"
@Pattern	Killed	12	1	#expr	ArithExpression[487]	[]
@Pattern	Killed	2	1	#expr	ArithExpression[487]	['(argv) + (-(3))']
@Pattern	Killed	2	1	#expr	ArithExpression[487]	['(argv) + (-(3))', 'chg_addr']
@Pattern	Killed	2	1	#expr	ArithExpression[487]	['(argv) + (-(3))', 'chg_addr', 'dec_value']
@Pattern	Killed	2	1	#expr	ArithExpression[487]	['(argv) + (-(3))', 'dec_value']
@Pattern	Killed	12	1	#expr	ArithExpression[487]	['chg_addr']
@Pattern	Killed	9	1	#expr	ArithExpression[487]	['chg_addr', 'dec_value']
@Pattern	Killed	9	1	#expr	ArithExpression[487]	['dec_value']
@Pattern	Killed	1	0	#trap	InitAssignStatement[436]	[]	535	"x"
@Pattern	Killed	1	0	#cons	InitAssignStatement[436]	[]	535	"x"
@Pattern	Killed	2	0	#trap	CallStatement[588]	[]	561	"fprintf(stderr, "Invalid usage: a.exe x y z\n")"
@Pattern	Killed	1	0	#trap	CallStatement[524]	[]	545	"printf("equilateral triangle\n")"
@Pattern	Killed	1	0	#trap	CallStatement[540]	[]	548	"printf("isosceles triangle\n")"
@Pattern	Killed	1	0	#trap	CallStatement[556]	[]	551	"printf("ordinary triangle\n")"
@Pattern	Killed	1	0	#trap	CallStatement[568]	[]	554	"printf("not the triangle\n")"
