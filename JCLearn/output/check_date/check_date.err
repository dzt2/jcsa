	168	ORAN::cmp_operator	RelationExpression[3230]	arith_sub	1 --> 0	[]
	180	ORBN::cmp_operator	RelationExpression[3230]	bit_xor	1 --> 0	[]
	422	BTRP::trap_on_true	ParanthExpression[2250]	True	1 --> 0	[]
	424	BTRP::trap_on_false	ParanthExpression[2250]	False	1 --> 0	[]
	426	BTRP::trap_on_true	ParanthExpression[2252]	True	1 --> 0	[]
	428	BTRP::trap_on_false	ParanthExpression[2252]	False	1 --> 0	[]
	430	BTRP::trap_on_true	ParanthExpression[2913]	True	1 --> 0	[]
	432	BTRP::trap_on_false	ParanthExpression[2913]	False	1 --> 0	[]
	434	BTRP::trap_on_true	ParanthExpression[2915]	True	1 --> 0	[]
	315	OLAN::cmp_operator	LogicBinaryExpression[1969]	arith_sub	1 --> -1	['#cons:281:(((year) % (400)) == (0)) && ((year % 4 == 0) && (year % 100 != 0)):-1', '#cons:281:true:1', '#cons:315:!((switch(month) { case 1:  return day <= 31; case 2:  {   if(is_leap_year(year))   {    return day <= 29;   }   else   {    return day <= 28;   }  } case 3:  return day <= 31; case 4:  return day <= 30; case 5:  return day <= 31; case 6:  return day <= 30; case 7:  return day <= 31; case 8:  return day <= 31; case 9:  return day <= 30; case 10:  return day <= 31; case 11:  return day <= 30; case 12:  return day <= 31; default:  return 0; }) == (1)):1', '#cons:327:(switch(month) { case 1:  return day <= 31; case 2:  {   if(is_leap_year(year))   {    return day <= 29;   }   else   {    return day <= 28;   }  } case 3:  return day <= 31; case 4:  return day <= 30; case 5:  return day <= 31; case 6:  return day <= 30; case 7:  return day <= 31; case 8:  return day <= 31; case 9:  return day <= 30; case 10:  return day <= 31; case 11:  return day <= 30; case 12:  return day <= 31; default:  return 0; }) == (2):1', '#cons:332:true:1', '#cons:520:(argc) > (3):1', '#trap:281:trapping:-1']
	329	OLRN::cmp_operator	LogicBinaryExpression[1969]	not_equals	0 --> -1	['#cons:281:(((year) % (400)) == (0)) && ((year % 4 == 0) && (year % 100 != 0)):-1', '#cons:281:true:1', '#cons:315:!((switch(month) { case 1:  return day <= 31; case 2:  {   if(is_leap_year(year))   {    return day <= 29;   }   else   {    return day <= 28;   }  } case 3:  return day <= 31; case 4:  return day <= 30; case 5:  return day <= 31; case 6:  return day <= 30; case 7:  return day <= 31; case 8:  return day <= 31; case 9:  return day <= 30; case 10:  return day <= 31; case 11:  return day <= 30; case 12:  return day <= 31; default:  return 0; }) == (1)):1', '#cons:327:(switch(month) { case 1:  return day <= 31; case 2:  {   if(is_leap_year(year))   {    return day <= 29;   }   else   {    return day <= 28;   }  } case 3:  return day <= 31; case 4:  return day <= 30; case 5:  return day <= 31; case 6:  return day <= 30; case 7:  return day <= 31; case 8:  return day <= 31; case 9:  return day <= 30; case 10:  return day <= 31; case 11:  return day <= 30; case 12:  return day <= 31; default:  return 0; }) == (2):1', '#cons:332:true:1', '#cons:520:(argc) > (3):1', '#trap:281:trapping:-1']
	1742	STRP::trap_on_statement	CompoundStatement[2926]	None	0 --> -1	['#cons:304:(day) > (0):1', '#cons:315:true:1', '#cons:520:(argc) > (3):1', '#cons:573:true:1', '#trap:315:trapping:1']
	1743	STRP::trap_on_statement	CaseStatement[3615]	None	1 --> -1	['#cons:304:(day) > (0):1', '#cons:315:true:1', '#cons:520:(argc) > (3):1', '#cons:573:true:1', '#trap:315:trapping:1']
