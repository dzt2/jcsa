	Label	Killed	Alive	Type	Location	Words	Line	Code
@Pattern	Killed	29	7	#trap	BinAssignStatement[263]	[]	510	"length = argc - 1"
@Pattern	Killed	29	7	#trap	BinAssignStatement[263]	['trapping']	510	"length = argc - 1"
@Pattern	Killed	300	83	#cons	CallStatement[503]	[]	562	"parse_input(argc, argv)"
@Pattern	Killed	300	83	#cons	CallStatement[503]	['true']	562	"parse_input(argc, argv)"
@Pattern	Killed	62	29	#cons	BinAssignStatement[263]	[]	510	"length = argc - 1"
@Pattern	Killed	62	29	#cons	BinAssignStatement[263]	['true']	510	"length = argc - 1"
@Pattern	Killed	31	23	#stat	Identifier[259]	[]	510	"length"
@Pattern	Killed	1	0	#stat	Identifier[259]	['@((length) % ((argc) - (1)))']	510	"length"
@Pattern	Killed	31	23	#stat	Identifier[259]	['chg_numb']	510	"length"
@Pattern	Killed	1	0	#stat	Identifier[259]	['@((length) % ((argc) - (1)))', 'chg_numb']	510	"length"
@Pattern	Killed	31	23	#expr	ArithExpression[262]	[]	510	"argc - 1"
@Pattern	Killed	1	0	#expr	ArithExpression[262]	['(length) % ((argc) - (1))']	510	"argc - 1"
@Pattern	Killed	31	23	#expr	ArithExpression[262]	['chg_numb']	510	"argc - 1"
@Pattern	Killed	1	0	#expr	ArithExpression[262]	['(length) % ((argc) - (1))', 'chg_numb']	510	"argc - 1"
@Pattern	Killed	1600	294	#cons	IfStatement[495]	[]	559	"if(argc > 1)     {       list = parse_input(argc, argv);      value = list[0];      qsort(list + 1, argc - 2, sizeof(int), cmp_int);      answer = bi_search(list, argc - 2, value);      free(list);        if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }      return 0;     }      else     {      fprintf(stderr, "Too few arguments are provided.\n");      return -1;     }"
@Pattern	Killed	1521	250	#cons	IfStatement[495]	['(argc) > (1)']	559	"if(argc > 1)     {       list = parse_input(argc, argv);      value = list[0];      qsort(list + 1, argc - 2, sizeof(int), cmp_int);      answer = bi_search(list, argc - 2, value);      free(list);        if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }      return 0;     }      else     {      fprintf(stderr, "Too few arguments are provided.\n");      return -1;     }"
@Pattern	Killed	12	4	#expr	ConstExpression[282]	[]	512	"1"
@Pattern	Alive	0	1	#expr	ConstExpression[282]	['(k) % (1)']	512	"1"
@Pattern	Killed	12	4	#expr	ConstExpression[282]	['chg_numb']	512	"1"
@Pattern	Alive	0	1	#expr	ConstExpression[282]	['(k) % (1)', 'chg_numb']	512	"1"
@Pattern	Killed	5	3	#expr	ConstExpression[282]	['chg_numb', 'dec_value']	512	"1"
@Pattern	Alive	0	1	#expr	ConstExpression[282]	['(k) % (1)', 'chg_numb', 'dec_value']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['chg_numb', 'dec_value', 'set_zro']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['chg_numb', 'dec_value', 'shk_value']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['chg_numb', 'set_zro']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['chg_numb', 'shk_value']	512	"1"
@Pattern	Killed	5	3	#expr	ConstExpression[282]	['dec_value']	512	"1"
@Pattern	Alive	0	1	#expr	ConstExpression[282]	['(k) % (1)', 'dec_value']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['dec_value', 'set_zro']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['dec_value', 'shk_value']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['set_zro']	512	"1"
@Pattern	Alive	0	2	#expr	ConstExpression[282]	['shk_value']	512	"1"
@Pattern	Killed	12	4	#stat	Identifier[281]	[]	512	"k"
@Pattern	Alive	0	1	#stat	Identifier[281]	['@((k) % (1))']	512	"k"
@Pattern	Killed	12	4	#stat	Identifier[281]	['chg_numb']	512	"k"
@Pattern	Alive	0	1	#stat	Identifier[281]	['@((k) % (1))', 'chg_numb']	512	"k"
@Pattern	Alive	0	2	#stat	Identifier[281]	['chg_numb', 'set_zro']	512	"k"
@Pattern	Alive	0	2	#stat	Identifier[281]	['set_zro']	512	"k"
@Pattern	Killed	20	6	#cons	BinAssignStatement[283]	[]	512	"k = 1"
@Pattern	Alive	0	2	#cons	BinAssignStatement[283]	['(1) == (0)']	512	"k = 1"
@Pattern	Killed	6	3	#trap	BinAssignStatement[283]	[]	512	"k = 1"
@Pattern	Killed	6	3	#trap	BinAssignStatement[283]	['trapping']	512	"k = 1"
@Pattern	Killed	14	2	#expr	Implicator[308]	[]	514	"atoi(argv[k])"
@Pattern	Killed	1	0	#expr	Implicator[308]	['(*((list) + ((k) - (1)))) % (atoi(argv[k]))']	514	"atoi(argv[k])"
@Pattern	Killed	14	2	#expr	Implicator[308]	['chg_numb']	514	"atoi(argv[k])"
@Pattern	Killed	1	0	#expr	Implicator[308]	['(*((list) + ((k) - (1)))) % (atoi(argv[k]))', 'chg_numb']	514	"atoi(argv[k])"
@Pattern	Killed	2	0	#trap	BinAssignStatement[309]	[]	514	"list[k - 1] = atoi(argv[k])"
@Pattern	Killed	15	2	#cons	BinAssignStatement[309]	[]	514	"list[k - 1] = atoi(argv[k])"
@Pattern	Killed	2	0	#cons	BinAssignStatement[309]	['(atoi(argv[k])) != (0)']	514	"list[k - 1] = atoi(argv[k])"
@Pattern	Killed	14	2	#stat	DeferExpression[296]	[]	514	"list[k - 1]"
@Pattern	Killed	1	0	#stat	DeferExpression[296]	['@((*((list) + ((k) - (1)))) % (atoi(argv[k])))']	514	"list[k - 1]"
@Pattern	Killed	14	2	#stat	DeferExpression[296]	['chg_numb']	514	"list[k - 1]"
@Pattern	Killed	1	0	#stat	DeferExpression[296]	['@((*((list) + ((k) - (1)))) % (atoi(argv[k])))', 'chg_numb']	514	"list[k - 1]"
@Pattern	Killed	580	77	#cons	IfStatement[288]	[]	512	"for(k = 1; k < argc; k++)     {         list[k - 1] = atoi(argv[k]);     }"
@Pattern	Killed	66	7	#cons	IfStatement[288]	['(k) < (argc)']	512	"for(k = 1; k < argc; k++)     {         list[k - 1] = atoi(argv[k]);     }"
@Pattern	Killed	18	1	#cons	WaitAssignStatement[307]	[]	514	"atoi(argv[k])"
@Pattern	Killed	18	1	#cons	WaitAssignStatement[307]	['true']	514	"atoi(argv[k])"
@Pattern	Killed	5	0	#trap	WaitAssignStatement[307]	[]	514	"atoi(argv[k])"
@Pattern	Killed	1	0	#flow	InitAssignStatement[258]	[]	509	"k"
@Pattern	Killed	1	0	#cons	InitAssignStatement[258]	[]	509	"k"
@Pattern	Killed	1	0	#flow	BinAssignStatement[263]	[]	510	"length = argc - 1"
@Pattern	Killed	58	25	#cons	CallStatement[271]	[]	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	58	25	#cons	CallStatement[271]	['true']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	1	0	#trap	WaitAssignStatement[275]	[]	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	32	17	#cons	WaitAssignStatement[275]	[]	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	32	17	#cons	WaitAssignStatement[275]	['true']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	2	0	#cons	BinAssignStatement[279]	[]	511	"list = (int *) malloc(sizeof(int) * length)"
@Pattern	Killed	2	0	#flow	BinAssignStatement[279]	[]	511	"list = (int *) malloc(sizeof(int) * length)"
@Pattern	Killed	29	6	#trap	IfStatement[288]	[]	512	"for(k = 1; k < argc; k++)     {         list[k - 1] = atoi(argv[k]);     }"
@Pattern	Killed	29	6	#trap	IfStatement[288]	['trapping']	512	"for(k = 1; k < argc; k++)     {         list[k - 1] = atoi(argv[k]);     }"
@Pattern	Killed	2	0	#flow	IfStatement[288]	[]	512	"for(k = 1; k < argc; k++)     {         list[k - 1] = atoi(argv[k]);     }"
@Pattern	Killed	38	3	#cons	CallStatement[303]	[]	514	"atoi(argv[k])"
@Pattern	Killed	38	3	#cons	CallStatement[303]	['true']	514	"atoi(argv[k])"
@Pattern	Killed	38	8	#expr	RelationExpression[287]	[]	512	"k < argc"
@Pattern	Killed	1	0	#expr	RelationExpression[287]	['(k) + (argc)']	512	"k < argc"
@Pattern	Killed	38	8	#expr	RelationExpression[287]	['not_bool']	512	"k < argc"
@Pattern	Killed	1	0	#expr	RelationExpression[287]	['(k) + (argc)', 'not_bool']	512	"k < argc"
@Pattern	Killed	2	0	#refr	Identifier[260]	[]	510	"argc"
@Pattern	Killed	2	0	#refr	Identifier[285]	[]	512	"k"
@Pattern	Killed	2	0	#refr	Identifier[286]	[]	512	"argc"
@Pattern	Unknown	1	1	#refr	Identifier[269]	[]	511	"length"
@Pattern	Alive	0	1	#refr	Identifier[269]	['argc']	511	"length"
@Pattern	Unknown	1	1	#refr	Identifier[269]	['chg_numb']	511	"length"
@Pattern	Alive	0	1	#refr	Identifier[269]	['argc', 'chg_numb']	511	"length"
@Pattern	Killed	31	17	#expr	WaitExpression[273]	[]	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	31	17	#expr	WaitExpression[273]	['malloc((4) * (length))']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	31	17	#expr	ArithExpression[270]	[]	511	"sizeof(int) * length"
@Pattern	Alive	0	1	#expr	ArithExpression[270]	['(4) + (argc)']	511	"sizeof(int) * length"
@Pattern	Killed	31	17	#expr	ArithExpression[270]	['chg_numb']	511	"sizeof(int) * length"
@Pattern	Alive	0	1	#expr	ArithExpression[270]	['(4) + (argc)', 'chg_numb']	511	"sizeof(int) * length"
@Pattern	Killed	31	17	#stat	Implicator[274]	[]	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	31	17	#stat	Implicator[274]	['@(malloc((4) * (length)))']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	31	17	#stat	Implicator[274]	['@(malloc((4) * (length)))', 'chg_addr']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	31	17	#stat	Implicator[274]	['chg_addr']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	28	6	#trap	CallStatement[271]	[]	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	28	6	#trap	CallStatement[271]	['trapping']	511	"malloc(sizeof(int) * length)"
@Pattern	Killed	13	1	#expr	WaitExpression[305]	[]	514	"atoi(argv[k])"
@Pattern	Killed	13	1	#expr	WaitExpression[305]	['atoi(*((argv) + (k)))']	514	"atoi(argv[k])"
@Pattern	Killed	13	1	#refr	DeferExpression[302]	[]	514	"argv[k]"
@Pattern	Killed	1	0	#refr	DeferExpression[302]	['*((argv) + (argc))']	514	"argv[k]"
@Pattern	Killed	13	1	#refr	DeferExpression[302]	['chg_addr']	514	"argv[k]"
@Pattern	Killed	1	0	#refr	DeferExpression[302]	['*((argv) + (argc))', 'chg_addr']	514	"argv[k]"
@Pattern	Killed	13	1	#stat	Implicator[306]	[]	514	"atoi(argv[k])"
@Pattern	Killed	13	1	#stat	Implicator[306]	['@(atoi(*((argv) + (k))))']	514	"atoi(argv[k])"
@Pattern	Killed	13	1	#stat	Implicator[306]	['@(atoi(*((argv) + (k))))', 'chg_numb']	514	"atoi(argv[k])"
@Pattern	Killed	13	1	#stat	Implicator[306]	['chg_numb']	514	"atoi(argv[k])"
@Pattern	Killed	2	0	#refr	Identifier[300]	[]	514	"k"
@Pattern	Killed	13	1	#expr	ArithExpression[301]	[]
@Pattern	Killed	1	0	#expr	ArithExpression[301]	['(argv) + (argc)']
@Pattern	Killed	13	1	#expr	ArithExpression[301]	['chg_addr']
@Pattern	Killed	1	0	#expr	ArithExpression[301]	['(argv) + (argc)', 'chg_addr']
@Pattern	Killed	22	2	#trap	CallStatement[303]	[]	514	"atoi(argv[k])"
@Pattern	Killed	22	2	#trap	CallStatement[303]	['trapping']	514	"atoi(argv[k])"
@Pattern	Killed	3	0	#expr	ArithExpression[321]	[]
@Pattern	Killed	3	0	#stat	Identifier[322]	[]	512	"k"
@Pattern	Killed	5	2	#cons	IncreAssignStatement[323]	[]	512	"k++"
@Pattern	Killed	5	2	#cons	IncreAssignStatement[323]	['true']	512	"k++"
@Pattern	Unknown	2	2	#trap	IncreAssignStatement[323]	[]	512	"k++"
@Pattern	Unknown	2	2	#trap	IncreAssignStatement[323]	['trapping']	512	"k++"
@Pattern	Killed	8	4	#expr	Identifier[260]	[]	510	"argc"
@Pattern	Killed	2	1	#expr	Identifier[260]	['-(argc)']	510	"argc"
@Pattern	Killed	2	1	#expr	Identifier[260]	['-(argc)', 'chg_numb']	510	"argc"
@Pattern	Killed	8	4	#expr	Identifier[260]	['chg_numb']	510	"argc"
@Pattern	Alive	3	7	#expr	ConstExpression[261]	[]	510	"1"
@Pattern	Alive	0	3	#expr	ConstExpression[261]	['-(1)']	510	"1"
@Pattern	Alive	3	7	#expr	ConstExpression[261]	['chg_numb']	510	"1"
@Pattern	Alive	0	3	#expr	ConstExpression[261]	['-(1)', 'chg_numb']	510	"1"
@Pattern	Alive	0	7	#expr	ConstExpression[261]	['chg_numb', 'dec_value']	510	"1"
@Pattern	Alive	0	6	#expr	ConstExpression[261]	['chg_numb', 'set_neg']	510	"1"
@Pattern	Alive	0	7	#expr	ConstExpression[261]	['dec_value']	510	"1"
@Pattern	Alive	0	6	#expr	ConstExpression[261]	['set_neg']	510	"1"
@Pattern	Killed	11	1	#expr	Identifier[285]	[]	512	"k"
@Pattern	Killed	2	1	#expr	Identifier[285]	['-(k)']	512	"k"
@Pattern	Killed	2	1	#expr	Identifier[285]	['-(k)', 'chg_numb']	512	"k"
@Pattern	Killed	11	1	#expr	Identifier[285]	['chg_numb']	512	"k"
@Pattern	Killed	11	1	#expr	Identifier[286]	[]	512	"argc"
@Pattern	Killed	2	1	#expr	Identifier[286]	['-(argc)']	512	"argc"
@Pattern	Killed	2	1	#expr	Identifier[286]	['-(argc)', 'chg_numb']	512	"argc"
@Pattern	Killed	11	1	#expr	Identifier[286]	['chg_numb']	512	"argc"
@Pattern	Killed	6	4	#expr	ConstExpression[268]	[]	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'chg_numb']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'chg_numb', 'dec_value']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'chg_numb', 'dec_value', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'chg_numb', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'dec_value']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'dec_value', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[268]	['-(4)', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	6	4	#expr	ConstExpression[268]	['chg_numb']	511	"sizeof(int)"
@Pattern	Killed	6	1	#expr	ConstExpression[268]	['chg_numb', 'dec_value']	511	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[268]	['chg_numb', 'dec_value', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[268]	['chg_numb', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	6	1	#expr	ConstExpression[268]	['dec_value']	511	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[268]	['dec_value', 'set_neg']	511	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[268]	['set_neg']	511	"sizeof(int)"
@Pattern	Killed	7	5	#expr	Identifier[269]	[]	511	"length"
@Pattern	Killed	2	1	#expr	Identifier[269]	['-(length)']	511	"length"
@Pattern	Killed	2	1	#expr	Identifier[269]	['-(length)', 'chg_numb']	511	"length"
@Pattern	Killed	7	5	#expr	Identifier[269]	['chg_numb']	511	"length"
@Pattern	Killed	11	1	#expr	Identifier[300]	[]	514	"k"
@Pattern	Killed	2	1	#expr	Identifier[300]	['-(k)']	514	"k"
@Pattern	Killed	2	1	#expr	Identifier[300]	['-(k)', 'chg_numb']	514	"k"
@Pattern	Killed	11	1	#expr	Identifier[300]	['chg_numb']	514	"k"
@Pattern	Killed	4	0	#stat	Identifier[260]	[]	510	"argc"
@Pattern	Killed	4	0	#stat	Identifier[285]	[]	512	"k"
@Pattern	Killed	4	0	#stat	Identifier[286]	[]	512	"argc"
@Pattern	Alive	1	3	#stat	Identifier[269]	[]	511	"length"
@Pattern	Alive	0	2	#stat	Identifier[269]	['(length) + (1)']	511	"length"
@Pattern	Alive	1	3	#stat	Identifier[269]	['chg_numb']	511	"length"
@Pattern	Alive	0	2	#stat	Identifier[269]	['(length) + (1)', 'chg_numb']	511	"length"
@Pattern	Alive	0	2	#stat	Identifier[269]	['chg_numb', 'inc_value']	511	"length"
@Pattern	Alive	0	2	#stat	Identifier[269]	['inc_value']	511	"length"
@Pattern	Killed	4	0	#stat	Identifier[300]	[]	514	"k"
@Pattern	Killed	1	0	#cons	InitAssignStatement[252]	[]	509	"* list"
@Pattern	Killed	1	0	#trap	InitAssignStatement[252]	[]	509	"* list"
@Pattern	Killed	2	0	#trap	ReturnAssignStatement[330]	[]	516	"return list;"
@Pattern	Killed	2	0	#cons	ReturnAssignStatement[330]	[]	516	"return list;"
@Pattern	Killed	17	1	#stat	Identifier[350]	[]	522	"x"
@Pattern	Killed	1	0	#stat	Identifier[350]	['@((x) % (*(@(xptr))))']	522	"x"
@Pattern	Killed	17	1	#stat	Identifier[350]	['chg_numb']	522	"x"
@Pattern	Killed	1	0	#stat	Identifier[350]	['@((x) % (*(@(xptr))))', 'chg_numb']	522	"x"
@Pattern	Killed	28	1	#cons	BinAssignStatement[355]	[]	522	"x = *((int *) xptr)"
@Pattern	Killed	28	1	#cons	BinAssignStatement[355]	['true']	522	"x = *((int *) xptr)"
@Pattern	Killed	8	0	#trap	BinAssignStatement[355]	[]	522	"x = *((int *) xptr)"
@Pattern	Killed	17	1	#expr	DeferExpression[354]	[]	522	"*((int *) xptr)"
@Pattern	Killed	1	0	#expr	DeferExpression[354]	['(x) % (*(@(xptr)))']	522	"*((int *) xptr)"
@Pattern	Killed	17	1	#expr	DeferExpression[354]	['chg_numb']	522	"*((int *) xptr)"
@Pattern	Killed	1	0	#expr	DeferExpression[354]	['(x) % (*(@(xptr)))', 'chg_numb']	522	"*((int *) xptr)"
@Pattern	Killed	27	1	#cons	BinAssignStatement[362]	[]	523	"y = *((int *) yptr)"
@Pattern	Killed	3	0	#cons	BinAssignStatement[362]	['(*(@(yptr))) != (0)']	523	"y = *((int *) yptr)"
@Pattern	Killed	8	0	#trap	BinAssignStatement[362]	[]	523	"y = *((int *) yptr)"
@Pattern	Killed	17	1	#stat	Identifier[357]	[]	523	"y"
@Pattern	Killed	1	0	#stat	Identifier[357]	['@((y) % (*(@(yptr))))']	523	"y"
@Pattern	Killed	17	1	#stat	Identifier[357]	['chg_numb']	523	"y"
@Pattern	Killed	1	0	#stat	Identifier[357]	['@((y) % (*(@(yptr))))', 'chg_numb']	523	"y"
@Pattern	Killed	17	1	#expr	DeferExpression[361]	[]	523	"*((int *) yptr)"
@Pattern	Killed	1	0	#expr	DeferExpression[361]	['(y) % (*(@(yptr)))']	523	"*((int *) yptr)"
@Pattern	Killed	17	1	#expr	DeferExpression[361]	['chg_numb']	523	"*((int *) yptr)"
@Pattern	Killed	1	0	#expr	DeferExpression[361]	['(y) % (*(@(yptr)))', 'chg_numb']	523	"*((int *) yptr)"
@Pattern	Killed	1	0	#cons	InitAssignStatement[349]	[]	521	"y"
@Pattern	Killed	1	0	#flow	InitAssignStatement[349]	[]	521	"y"
@Pattern	Killed	1	0	#flow	BinAssignStatement[355]	[]	522	"x = *((int *) xptr)"
@Pattern	Killed	75	11	#cons	ReturnAssignStatement[368]	[]	524	"return x - y;"
@Pattern	Killed	2	0	#cons	ReturnAssignStatement[368]	['(x) != (y)']	524	"return x - y;"
@Pattern	Killed	43	7	#expr	ArithExpression[366]	[]	524	"x - y"
@Pattern	Killed	1	0	#expr	ArithExpression[366]	['(y) - (y)']	524	"x - y"
@Pattern	Killed	43	7	#expr	ArithExpression[366]	['chg_numb']	524	"x - y"
@Pattern	Killed	1	0	#expr	ArithExpression[366]	['(y) - (y)', 'chg_numb']	524	"x - y"
@Pattern	Killed	2	0	#expr	ArithExpression[366]	['chg_numb', 'set_zro']	524	"x - y"
@Pattern	Killed	2	0	#expr	ArithExpression[366]	['set_zro']	524	"x - y"
@Pattern	Killed	1	0	#refr	Identifier[364]	[]	524	"x"
@Pattern	Killed	43	7	#stat	ReturnPoint[367]	[]	524	"return"
@Pattern	Killed	1	0	#stat	ReturnPoint[367]	['@((y) - (y))']	524	"return"
@Pattern	Killed	43	7	#stat	ReturnPoint[367]	['chg_numb']	524	"return"
@Pattern	Killed	1	0	#stat	ReturnPoint[367]	['@((y) - (y))', 'chg_numb']	524	"return"
@Pattern	Killed	2	0	#stat	ReturnPoint[367]	['chg_numb', 'set_zro']	524	"return"
@Pattern	Killed	2	0	#stat	ReturnPoint[367]	['set_zro']	524	"return"
@Pattern	Killed	34	0	#trap	ReturnAssignStatement[368]	[]	524	"return x - y;"
@Pattern	Killed	1	0	#refr	Identifier[365]	[]	524	"y"
@Pattern	Killed	10	2	#expr	Identifier[364]	[]	524	"x"
@Pattern	Killed	3	0	#expr	Identifier[364]	['-(x)']	524	"x"
@Pattern	Killed	10	2	#expr	Identifier[364]	['chg_numb']	524	"x"
@Pattern	Killed	3	0	#expr	Identifier[364]	['-(x)', 'chg_numb']	524	"x"
@Pattern	Killed	10	2	#expr	Identifier[365]	[]	524	"y"
@Pattern	Killed	3	0	#expr	Identifier[365]	['-(y)']	524	"y"
@Pattern	Killed	10	2	#expr	Identifier[365]	['chg_numb']	524	"y"
@Pattern	Killed	3	0	#expr	Identifier[365]	['-(y)', 'chg_numb']	524	"y"
@Pattern	Killed	4	0	#stat	DeferExpression[354]	[]	522	"*((int *) xptr)"
@Pattern	Killed	4	0	#stat	DeferExpression[361]	[]	523	"*((int *) yptr)"
@Pattern	Alive	1	3	#stat	Identifier[364]	[]	524	"x"
@Pattern	Alive	0	2	#stat	Identifier[364]	['(x) + (1)']	524	"x"
@Pattern	Alive	1	3	#stat	Identifier[364]	['chg_numb']	524	"x"
@Pattern	Alive	0	2	#stat	Identifier[364]	['(x) + (1)', 'chg_numb']	524	"x"
@Pattern	Alive	0	2	#stat	Identifier[364]	['chg_numb', 'inc_value']	524	"x"
@Pattern	Alive	0	2	#stat	Identifier[364]	['inc_value']	524	"x"
@Pattern	Alive	1	3	#stat	Identifier[365]	[]	524	"y"
@Pattern	Unknown	1	1	#stat	Identifier[365]	['(y) + (1)']	524	"y"
@Pattern	Unknown	1	1	#stat	Identifier[365]	['(y) + (1)', 'chg_numb']	524	"y"
@Pattern	Unknown	1	1	#stat	Identifier[365]	['(y) + (1)', 'chg_numb', 'inc_value']	524	"y"
@Pattern	Unknown	1	1	#stat	Identifier[365]	['(y) + (1)', 'inc_value']	524	"y"
@Pattern	Alive	1	3	#stat	Identifier[365]	['chg_numb']	524	"y"
@Pattern	Unknown	1	1	#stat	Identifier[365]	['chg_numb', 'inc_value']	524	"y"
@Pattern	Unknown	1	1	#stat	Identifier[365]	['inc_value']	524	"y"
@Pattern	Killed	1	0	#cons	InitAssignStatement[346]	[]	521	"x"
@Pattern	Killed	1	0	#trap	InitAssignStatement[346]	[]	521	"x"
@Pattern	Killed	17	12	#cons	BinAssignStatement[396]	[]	531	"beg = 0"
@Pattern	Killed	17	12	#cons	BinAssignStatement[396]	['true']	531	"beg = 0"
@Pattern	Killed	1070	145	#cons	CallStatement[542]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	1070	145	#cons	CallStatement[542]	['true']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	7	3	#trap	BinAssignStatement[396]	[]	531	"beg = 0"
@Pattern	Killed	7	3	#trap	BinAssignStatement[396]	['trapping']	531	"beg = 0"
@Pattern	Killed	1116	154	#cons	WaitAssignStatement[507]	[]	562	"parse_input(argc, argv)"
@Pattern	Killed	1116	154	#cons	WaitAssignStatement[507]	['true']	562	"parse_input(argc, argv)"
@Pattern	Killed	10	8	#expr	ConstExpression[395]	[]	531	"0"
@Pattern	Killed	1	0	#expr	ConstExpression[395]	['(beg) % (0)']	531	"0"
@Pattern	Killed	10	4	#expr	ConstExpression[395]	['chg_numb']	531	"0"
@Pattern	Killed	1	0	#expr	ConstExpression[395]	['(beg) % (0)', 'chg_numb']	531	"0"
@Pattern	Killed	10	8	#stat	Identifier[394]	[]	531	"beg"
@Pattern	Killed	1	0	#stat	Identifier[394]	['@((beg) % (0))']	531	"beg"
@Pattern	Killed	10	8	#stat	Identifier[394]	['chg_numb']	531	"beg"
@Pattern	Killed	1	0	#stat	Identifier[394]	['@((beg) % (0))', 'chg_numb']	531	"beg"
@Pattern	Killed	91	9	#cons	BinAssignStatement[402]	[]	532	"end = length - 1"
@Pattern	Killed	2	0	#cons	BinAssignStatement[402]	['((length) - (1)) == (0)']	532	"end = length - 1"
@Pattern	Killed	37	3	#trap	BinAssignStatement[402]	[]	532	"end = length - 1"
@Pattern	Killed	37	3	#trap	BinAssignStatement[402]	['trapping']	532	"end = length - 1"
@Pattern	Killed	54	4	#stat	Identifier[398]	[]	532	"end"
@Pattern	Killed	1	0	#stat	Identifier[398]	['@((end) % ((length) - (1)))']	532	"end"
@Pattern	Killed	54	4	#stat	Identifier[398]	['chg_numb']	532	"end"
@Pattern	Killed	1	0	#stat	Identifier[398]	['@((end) % ((length) - (1)))', 'chg_numb']	532	"end"
@Pattern	Killed	54	4	#expr	ArithExpression[401]	[]	532	"length - 1"
@Pattern	Killed	1	0	#expr	ArithExpression[401]	['(end) % ((length) - (1))']	532	"length - 1"
@Pattern	Killed	54	4	#expr	ArithExpression[401]	['chg_numb']	532	"length - 1"
@Pattern	Killed	1	0	#expr	ArithExpression[401]	['(end) % ((length) - (1))', 'chg_numb']	532	"length - 1"
@Pattern	Killed	93	5	#expr	ArithExpression[415]	[]	535	"(beg + end) / 2"
@Pattern	Killed	1	0	#expr	ArithExpression[415]	['(mid) % (((beg) + (end)) / (2))']	535	"(beg + end) / 2"
@Pattern	Killed	93	5	#expr	ArithExpression[415]	['chg_numb']	535	"(beg + end) / 2"
@Pattern	Killed	1	0	#expr	ArithExpression[415]	['(mid) % (((beg) + (end)) / (2))', 'chg_numb']	535	"(beg + end) / 2"
@Pattern	Killed	690	75	#cons	IfStatement[407]	[]	533	"while(beg <= end)     {         mid = (beg + end) / 2;         if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }     }"
@Pattern	Killed	579	58	#cons	IfStatement[407]	['(beg) <= (end)']	533	"while(beg <= end)     {         mid = (beg + end) / 2;         if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }     }"
@Pattern	Killed	167	19	#cons	BinAssignStatement[416]	[]	535	"mid = (beg + end) / 2"
@Pattern	Killed	3	0	#cons	BinAssignStatement[416]	['(((beg) + (end)) / (2)) != (0)']	535	"mid = (beg + end) / 2"
@Pattern	Killed	81	15	#trap	BinAssignStatement[416]	[]	535	"mid = (beg + end) / 2"
@Pattern	Killed	81	15	#trap	BinAssignStatement[416]	['trapping']	535	"mid = (beg + end) / 2"
@Pattern	Killed	93	5	#stat	Identifier[410]	[]	535	"mid"
@Pattern	Killed	1	0	#stat	Identifier[410]	['@((mid) % (((beg) + (end)) / (2)))']	535	"mid"
@Pattern	Killed	93	5	#stat	Identifier[410]	['chg_numb']	535	"mid"
@Pattern	Killed	1	0	#stat	Identifier[410]	['@((mid) % (((beg) + (end)) / (2)))', 'chg_numb']	535	"mid"
@Pattern	Killed	88	11	#cons	BinAssignStatement[431]	[]	538	"beg = mid + 1"
@Pattern	Killed	88	11	#cons	BinAssignStatement[431]	['true']	538	"beg = mid + 1"
@Pattern	Killed	55	3	#expr	ArithExpression[430]	[]	538	"mid + 1"
@Pattern	Killed	1	0	#expr	ArithExpression[430]	['(beg) % ((mid) + (1))']	538	"mid + 1"
@Pattern	Killed	55	3	#expr	ArithExpression[430]	['chg_numb']	538	"mid + 1"
@Pattern	Killed	1	0	#expr	ArithExpression[430]	['(beg) % ((mid) + (1))', 'chg_numb']	538	"mid + 1"
@Pattern	Killed	55	3	#stat	Identifier[427]	[]	538	"beg"
@Pattern	Killed	1	0	#stat	Identifier[427]	['@((beg) % ((mid) + (1)))']	538	"beg"
@Pattern	Killed	55	3	#stat	Identifier[427]	['chg_numb']	538	"beg"
@Pattern	Killed	1	0	#stat	Identifier[427]	['@((beg) % ((mid) + (1)))', 'chg_numb']	538	"beg"
@Pattern	Killed	412	39	#cons	IfStatement[424]	[]	536	"if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	91	11	#cons	IfStatement[424]	['(*((list) + (mid))) < (value)']	536	"if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	35	6	#trap	BinAssignStatement[431]	[]	538	"beg = mid + 1"
@Pattern	Killed	35	6	#trap	BinAssignStatement[431]	['trapping']	538	"beg = mid + 1"
@Pattern	Killed	55	3	#stat	Identifier[444]	[]	542	"end"
@Pattern	Killed	1	0	#stat	Identifier[444]	['@((end) % ((mid) - (1)))']	542	"end"
@Pattern	Killed	55	3	#stat	Identifier[444]	['chg_numb']	542	"end"
@Pattern	Killed	1	0	#stat	Identifier[444]	['@((end) % ((mid) - (1)))', 'chg_numb']	542	"end"
@Pattern	Killed	89	10	#cons	BinAssignStatement[448]	[]	542	"end = mid - 1"
@Pattern	Killed	3	0	#cons	BinAssignStatement[448]	['((mid) - (1)) != (0)']	542	"end = mid - 1"
@Pattern	Killed	217	24	#cons	IfStatement[441]	[]	540	"if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	92	10	#cons	IfStatement[441]	['(*((list) + (mid))) > (value)']	540	"if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	36	5	#trap	BinAssignStatement[448]	[]	542	"end = mid - 1"
@Pattern	Killed	36	5	#trap	BinAssignStatement[448]	['trapping']	542	"end = mid - 1"
@Pattern	Killed	55	3	#expr	ArithExpression[447]	[]	542	"mid - 1"
@Pattern	Killed	1	0	#expr	ArithExpression[447]	['(end) % ((mid) - (1))']	542	"mid - 1"
@Pattern	Killed	55	3	#expr	ArithExpression[447]	['chg_numb']	542	"mid - 1"
@Pattern	Killed	1	0	#expr	ArithExpression[447]	['(end) % ((mid) - (1))', 'chg_numb']	542	"mid - 1"
@Pattern	Alive	0	1	#flow	InitAssignStatement[393]	[]	530	"end"
@Pattern	Alive	0	1	#cons	InitAssignStatement[393]	[]	530	"end"
@Pattern	Killed	1	0	#flow	BinAssignStatement[396]	[]	531	"beg = 0"
@Pattern	Killed	2	0	#flow	BinAssignStatement[402]	[]	532	"end = length - 1"
@Pattern	Killed	38	1	#trap	IfStatement[407]	[]	533	"while(beg <= end)     {         mid = (beg + end) / 2;         if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }     }"
@Pattern	Killed	38	1	#trap	IfStatement[407]	['trapping']	533	"while(beg <= end)     {         mid = (beg + end) / 2;         if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }     }"
@Pattern	Killed	1	0	#flow	IfStatement[407]	[]	533	"while(beg <= end)     {         mid = (beg + end) / 2;         if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }     }"
@Pattern	Killed	1	0	#flow	BinAssignStatement[416]	[]	535	"mid = (beg + end) / 2"
@Pattern	Killed	43	1	#trap	IfStatement[424]	[]	536	"if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	43	1	#trap	IfStatement[424]	['trapping']	536	"if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	2	0	#flow	IfStatement[424]	[]	536	"if(list[mid] < value)         {             beg = mid + 1;         }         else if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	42	2	#trap	IfStatement[441]	[]	540	"if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	42	2	#trap	IfStatement[441]	['trapping']	540	"if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	1	0	#flow	IfStatement[441]	[]	540	"if(list[mid] > value)         {             end = mid - 1;         }         else         {             return mid;         }"
@Pattern	Killed	47	3	#expr	RelationExpression[406]	[]	533	"beg <= end"
@Pattern	Killed	1	0	#expr	RelationExpression[406]	['(beg) + (end)']	533	"beg <= end"
@Pattern	Killed	47	3	#expr	RelationExpression[406]	['not_bool']	533	"beg <= end"
@Pattern	Killed	1	0	#expr	RelationExpression[406]	['(beg) + (end)', 'not_bool']	533	"beg <= end"
@Pattern	Killed	59	3	#expr	RelationExpression[423]	[]	536	"list[mid] < value"
@Pattern	Killed	1	0	#expr	RelationExpression[423]	['(*((list) + (mid))) + (value)']	536	"list[mid] < value"
@Pattern	Killed	59	3	#expr	RelationExpression[423]	['not_bool']	536	"list[mid] < value"
@Pattern	Killed	1	0	#expr	RelationExpression[423]	['(*((list) + (mid))) + (value)', 'not_bool']	536	"list[mid] < value"
@Pattern	Killed	56	6	#expr	RelationExpression[440]	[]	540	"list[mid] > value"
@Pattern	Killed	1	0	#expr	RelationExpression[440]	['(*((list) + (mid))) + (value)']	540	"list[mid] > value"
@Pattern	Killed	56	6	#expr	RelationExpression[440]	['not_bool']	540	"list[mid] > value"
@Pattern	Killed	1	0	#expr	RelationExpression[440]	['(*((list) + (mid))) + (value)', 'not_bool']	540	"list[mid] > value"
@Pattern	Killed	4	0	#refr	Identifier[404]	[]	533	"beg"
@Pattern	Killed	4	0	#refr	Identifier[405]	[]	533	"end"
@Pattern	Killed	4	0	#refr	Identifier[399]	[]	532	"length"
@Pattern	Killed	4	0	#refr	Identifier[422]	[]	536	"value"
@Pattern	Killed	15	1	#refr	DeferExpression[421]	[]	536	"list[mid]"
@Pattern	Killed	1	0	#refr	DeferExpression[421]	['*((list) + (beg))']	536	"list[mid]"
@Pattern	Killed	15	1	#refr	DeferExpression[421]	['chg_numb']	536	"list[mid]"
@Pattern	Killed	1	0	#refr	DeferExpression[421]	['*((list) + (beg))', 'chg_numb']	536	"list[mid]"
@Pattern	Killed	15	1	#expr	ArithExpression[420]	[]
@Pattern	Killed	1	0	#expr	ArithExpression[420]	['(list) + (beg)']
@Pattern	Killed	15	1	#expr	ArithExpression[420]	['chg_addr']
@Pattern	Killed	1	0	#expr	ArithExpression[420]	['(list) + (beg)', 'chg_addr']
@Pattern	Killed	4	0	#refr	Identifier[419]	[]	536	"mid"
@Pattern	Killed	4	0	#refr	Identifier[439]	[]	540	"value"
@Pattern	Killed	15	1	#expr	ArithExpression[437]	[]
@Pattern	Killed	1	0	#expr	ArithExpression[437]	['(list) + (beg)']
@Pattern	Killed	15	1	#expr	ArithExpression[437]	['chg_addr']
@Pattern	Killed	1	0	#expr	ArithExpression[437]	['(list) + (beg)', 'chg_addr']
@Pattern	Killed	15	1	#refr	DeferExpression[438]	[]	540	"list[mid]"
@Pattern	Killed	1	0	#refr	DeferExpression[438]	['*((list) + (beg))']	540	"list[mid]"
@Pattern	Killed	15	1	#refr	DeferExpression[438]	['chg_numb']	540	"list[mid]"
@Pattern	Killed	1	0	#refr	DeferExpression[438]	['*((list) + (beg))', 'chg_numb']	540	"list[mid]"
@Pattern	Killed	4	0	#refr	Identifier[436]	[]	540	"mid"
@Pattern	Killed	53	3	#expr	ArithExpression[413]	[]	535	"beg + end"
@Pattern	Killed	1	0	#expr	ArithExpression[413]	['(length) + (end)']	535	"beg + end"
@Pattern	Killed	53	3	#expr	ArithExpression[413]	['chg_numb']	535	"beg + end"
@Pattern	Killed	1	0	#expr	ArithExpression[413]	['(length) + (end)', 'chg_numb']	535	"beg + end"
@Pattern	Killed	4	0	#refr	Identifier[411]	[]	535	"beg"
@Pattern	Killed	4	0	#refr	Identifier[412]	[]	535	"end"
@Pattern	Killed	27	4	#cons	ReturnAssignStatement[454]	[]	546	"return mid;"
@Pattern	Killed	2	0	#cons	ReturnAssignStatement[454]	['(mid) != (beg)']	546	"return mid;"
@Pattern	Killed	4	0	#refr	Identifier[452]	[]	546	"mid"
@Pattern	Killed	16	1	#stat	ReturnPoint[453]	[]	546	"return"
@Pattern	Killed	1	0	#stat	ReturnPoint[453]	['@(beg)']	546	"return"
@Pattern	Killed	16	1	#stat	ReturnPoint[453]	['chg_numb']	546	"return"
@Pattern	Killed	1	0	#stat	ReturnPoint[453]	['@(beg)', 'chg_numb']	546	"return"
@Pattern	Killed	11	1	#trap	ReturnAssignStatement[454]	[]	546	"return mid;"
@Pattern	Killed	11	1	#trap	ReturnAssignStatement[454]	['trapping']	546	"return mid;"
@Pattern	Killed	4	0	#refr	Identifier[428]	[]	538	"mid"
@Pattern	Killed	4	0	#refr	Identifier[445]	[]	542	"mid"
@Pattern	Killed	25	13	#cons	ReturnAssignStatement[469]	[]	549	"return -1;"
@Pattern	Killed	3	0	#cons	ReturnAssignStatement[469]	['(-(1)) != (0)']	549	"return -1;"
@Pattern	Killed	15	9	#expr	ArithExpression[467]	[]	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'chg_numb']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'chg_numb', 'inc_value']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'chg_numb', 'inc_value', 'set_pos']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'chg_numb', 'set_pos']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'inc_value']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'inc_value', 'set_pos']	549	"-1"
@Pattern	Killed	5	2	#expr	ArithExpression[467]	['-(-(1))', 'set_pos']	549	"-1"
@Pattern	Killed	15	9	#expr	ArithExpression[467]	['chg_numb']	549	"-1"
@Pattern	Killed	14	2	#expr	ArithExpression[467]	['chg_numb', 'inc_value']	549	"-1"
@Pattern	Killed	10	2	#expr	ArithExpression[467]	['chg_numb', 'inc_value', 'set_pos']	549	"-1"
@Pattern	Killed	10	2	#expr	ArithExpression[467]	['chg_numb', 'set_pos']	549	"-1"
@Pattern	Killed	14	2	#expr	ArithExpression[467]	['inc_value']	549	"-1"
@Pattern	Killed	10	2	#expr	ArithExpression[467]	['inc_value', 'set_pos']	549	"-1"
@Pattern	Killed	10	2	#expr	ArithExpression[467]	['set_pos']	549	"-1"
@Pattern	Killed	15	9	#stat	ReturnPoint[468]	[]	549	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[468]	['@(-(-(1)))']	549	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[468]	['@(-(-(1)))', 'chg_numb']	549	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[468]	['@(-(-(1)))', 'chg_numb', 'set_pos']	549	"return"
@Pattern	Killed	5	2	#stat	ReturnPoint[468]	['@(-(-(1)))', 'set_pos']	549	"return"
@Pattern	Killed	15	9	#stat	ReturnPoint[468]	['chg_numb']	549	"return"
@Pattern	Killed	10	2	#stat	ReturnPoint[468]	['chg_numb', 'set_pos']	549	"return"
@Pattern	Killed	10	2	#stat	ReturnPoint[468]	['set_pos']	549	"return"
@Pattern	Killed	10	4	#trap	ReturnAssignStatement[469]	[]	549	"return -1;"
@Pattern	Killed	10	4	#trap	ReturnAssignStatement[469]	['trapping']	549	"return -1;"
@Pattern	Killed	11	1	#expr	Identifier[404]	[]	533	"beg"
@Pattern	Killed	2	1	#expr	Identifier[404]	['-(beg)']	533	"beg"
@Pattern	Killed	2	1	#expr	Identifier[404]	['-(beg)', 'chg_numb']	533	"beg"
@Pattern	Killed	11	1	#expr	Identifier[404]	['chg_numb']	533	"beg"
@Pattern	Killed	12	0	#expr	Identifier[405]	[]	533	"end"
@Pattern	Killed	7	5	#expr	ConstExpression[466]	[]	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'chg_numb']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'chg_numb', 'dec_value']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'chg_numb', 'set_neg']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'dec_value']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'dec_value', 'set_neg']	549	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[466]	['-(1)', 'set_neg']	549	"1"
@Pattern	Killed	7	5	#expr	ConstExpression[466]	['chg_numb']	549	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[466]	['chg_numb', 'dec_value']	549	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[466]	['chg_numb', 'dec_value', 'set_neg']	549	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[466]	['chg_numb', 'set_neg']	549	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[466]	['dec_value']	549	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[466]	['dec_value', 'set_neg']	549	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[466]	['set_neg']	549	"1"
@Pattern	Killed	11	1	#expr	Identifier[399]	[]	532	"length"
@Pattern	Killed	2	1	#expr	Identifier[399]	['-(length)']	532	"length"
@Pattern	Killed	2	1	#expr	Identifier[399]	['-(length)', 'chg_numb']	532	"length"
@Pattern	Killed	11	1	#expr	Identifier[399]	['chg_numb']	532	"length"
@Pattern	Killed	11	1	#expr	ConstExpression[400]	[]	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'chg_numb']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'chg_numb', 'dec_value']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'chg_numb', 'set_neg']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'dec_value']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'dec_value', 'set_neg']	532	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[400]	['-(1)', 'set_neg']	532	"1"
@Pattern	Killed	11	1	#expr	ConstExpression[400]	['chg_numb']	532	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[400]	['chg_numb', 'dec_value']	532	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[400]	['chg_numb', 'dec_value', 'set_neg']	532	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[400]	['chg_numb', 'set_neg']	532	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[400]	['dec_value']	532	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[400]	['dec_value', 'set_neg']	532	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[400]	['set_neg']	532	"1"
@Pattern	Killed	12	0	#expr	DeferExpression[421]	[]	536	"list[mid]"
@Pattern	Killed	12	0	#expr	Identifier[422]	[]	536	"value"
@Pattern	Killed	11	1	#expr	ConstExpression[414]	[]	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'chg_numb']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'chg_numb', 'dec_value']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'chg_numb', 'dec_value', 'set_neg']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'chg_numb', 'set_neg']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'dec_value']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'dec_value', 'set_neg']	535	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[414]	['-(2)', 'set_neg']	535	"2"
@Pattern	Killed	11	1	#expr	ConstExpression[414]	['chg_numb']	535	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[414]	['chg_numb', 'dec_value']	535	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[414]	['chg_numb', 'dec_value', 'set_neg']	535	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[414]	['chg_numb', 'set_neg']	535	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[414]	['dec_value']	535	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[414]	['dec_value', 'set_neg']	535	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[414]	['set_neg']	535	"2"
@Pattern	Killed	11	1	#expr	Identifier[419]	[]	536	"mid"
@Pattern	Killed	2	1	#expr	Identifier[419]	['-(mid)']	536	"mid"
@Pattern	Killed	2	1	#expr	Identifier[419]	['-(mid)', 'chg_numb']	536	"mid"
@Pattern	Killed	11	1	#expr	Identifier[419]	['chg_numb']	536	"mid"
@Pattern	Killed	12	0	#expr	DeferExpression[438]	[]	540	"list[mid]"
@Pattern	Killed	12	0	#expr	Identifier[439]	[]	540	"value"
@Pattern	Killed	11	1	#expr	Identifier[436]	[]	540	"mid"
@Pattern	Killed	2	1	#expr	Identifier[436]	['-(mid)']	540	"mid"
@Pattern	Killed	2	1	#expr	Identifier[436]	['-(mid)', 'chg_numb']	540	"mid"
@Pattern	Killed	11	1	#expr	Identifier[436]	['chg_numb']	540	"mid"
@Pattern	Killed	11	1	#expr	Identifier[411]	[]	535	"beg"
@Pattern	Killed	2	1	#expr	Identifier[411]	['-(beg)']	535	"beg"
@Pattern	Killed	2	1	#expr	Identifier[411]	['-(beg)', 'chg_numb']	535	"beg"
@Pattern	Killed	11	1	#expr	Identifier[411]	['chg_numb']	535	"beg"
@Pattern	Killed	11	1	#expr	Identifier[412]	[]	535	"end"
@Pattern	Killed	2	1	#expr	Identifier[412]	['-(end)']	535	"end"
@Pattern	Killed	2	1	#expr	Identifier[412]	['-(end)', 'chg_numb']	535	"end"
@Pattern	Killed	11	1	#expr	Identifier[412]	['chg_numb']	535	"end"
@Pattern	Killed	12	1	#expr	Identifier[452]	[]	546	"mid"
@Pattern	Killed	2	1	#expr	Identifier[452]	['-(mid)']	546	"mid"
@Pattern	Killed	2	1	#expr	Identifier[452]	['-(mid)', 'chg_numb']	546	"mid"
@Pattern	Killed	12	1	#expr	Identifier[452]	['chg_numb']	546	"mid"
@Pattern	Killed	11	1	#expr	Identifier[428]	[]	538	"mid"
@Pattern	Killed	2	1	#expr	Identifier[428]	['-(mid)']	538	"mid"
@Pattern	Killed	2	1	#expr	Identifier[428]	['-(mid)', 'chg_numb']	538	"mid"
@Pattern	Killed	11	1	#expr	Identifier[428]	['chg_numb']	538	"mid"
@Pattern	Killed	11	1	#expr	ConstExpression[429]	[]	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'chg_numb']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'chg_numb', 'dec_value']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'chg_numb', 'set_neg']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'dec_value']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'dec_value', 'set_neg']	538	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[429]	['-(1)', 'set_neg']	538	"1"
@Pattern	Killed	11	1	#expr	ConstExpression[429]	['chg_numb']	538	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[429]	['chg_numb', 'dec_value']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[429]	['chg_numb', 'dec_value', 'set_neg']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[429]	['chg_numb', 'set_neg']	538	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[429]	['dec_value']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[429]	['dec_value', 'set_neg']	538	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[429]	['set_neg']	538	"1"
@Pattern	Killed	11	1	#expr	Identifier[445]	[]	542	"mid"
@Pattern	Killed	2	1	#expr	Identifier[445]	['-(mid)']	542	"mid"
@Pattern	Killed	2	1	#expr	Identifier[445]	['-(mid)', 'chg_numb']	542	"mid"
@Pattern	Killed	11	1	#expr	Identifier[445]	['chg_numb']	542	"mid"
@Pattern	Killed	11	1	#expr	ConstExpression[446]	[]	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'chg_numb']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'chg_numb', 'dec_value']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'chg_numb', 'set_neg']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'dec_value']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'dec_value', 'set_neg']	542	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[446]	['-(1)', 'set_neg']	542	"1"
@Pattern	Killed	11	1	#expr	ConstExpression[446]	['chg_numb']	542	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[446]	['chg_numb', 'dec_value']	542	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[446]	['chg_numb', 'dec_value', 'set_neg']	542	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[446]	['chg_numb', 'set_neg']	542	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[446]	['dec_value']	542	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[446]	['dec_value', 'set_neg']	542	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[446]	['set_neg']	542	"1"
@Pattern	Killed	4	0	#stat	Identifier[404]	[]	533	"beg"
@Pattern	Killed	4	0	#stat	Identifier[405]	[]	533	"end"
@Pattern	Unknown	2	2	#stat	Identifier[399]	[]	532	"length"
@Pattern	Unknown	1	1	#stat	Identifier[399]	['(length) + (1)']	532	"length"
@Pattern	Unknown	1	1	#stat	Identifier[399]	['(length) + (1)', 'chg_numb']	532	"length"
@Pattern	Unknown	1	1	#stat	Identifier[399]	['(length) + (1)', 'chg_numb', 'inc_value']	532	"length"
@Pattern	Unknown	1	1	#stat	Identifier[399]	['(length) + (1)', 'inc_value']	532	"length"
@Pattern	Unknown	2	2	#stat	Identifier[399]	['chg_numb']	532	"length"
@Pattern	Unknown	1	1	#stat	Identifier[399]	['chg_numb', 'inc_value']	532	"length"
@Pattern	Unknown	1	1	#stat	Identifier[399]	['inc_value']	532	"length"
@Pattern	Killed	4	0	#stat	DeferExpression[421]	[]	536	"list[mid]"
@Pattern	Killed	4	0	#stat	Identifier[422]	[]	536	"value"
@Pattern	Killed	4	0	#stat	Identifier[419]	[]	536	"mid"
@Pattern	Unknown	2	2	#stat	DeferExpression[438]	[]	540	"list[mid]"
@Pattern	Unknown	1	1	#stat	DeferExpression[438]	['(*((list) + (mid))) + (1)']	540	"list[mid]"
@Pattern	Unknown	1	1	#stat	DeferExpression[438]	['(*((list) + (mid))) + (1)', 'chg_numb']	540	"list[mid]"
@Pattern	Unknown	1	1	#stat	DeferExpression[438]	['(*((list) + (mid))) + (1)', 'chg_numb', 'inc_value']	540	"list[mid]"
@Pattern	Unknown	1	1	#stat	DeferExpression[438]	['(*((list) + (mid))) + (1)', 'inc_value']	540	"list[mid]"
@Pattern	Unknown	2	2	#stat	DeferExpression[438]	['chg_numb']	540	"list[mid]"
@Pattern	Unknown	1	1	#stat	DeferExpression[438]	['chg_numb', 'inc_value']	540	"list[mid]"
@Pattern	Unknown	1	1	#stat	DeferExpression[438]	['inc_value']	540	"list[mid]"
@Pattern	Killed	4	0	#stat	Identifier[439]	[]	540	"value"
@Pattern	Killed	4	0	#stat	Identifier[436]	[]	540	"mid"
@Pattern	Killed	4	0	#stat	Identifier[411]	[]	535	"beg"
@Pattern	Killed	4	0	#stat	Identifier[412]	[]	535	"end"
@Pattern	Unknown	2	2	#stat	Identifier[452]	[]	546	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[452]	['(mid) + (1)']	546	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[452]	['(mid) + (1)', 'chg_numb']	546	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[452]	['(mid) + (1)', 'chg_numb', 'inc_value']	546	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[452]	['(mid) + (1)', 'inc_value']	546	"mid"
@Pattern	Unknown	2	2	#stat	Identifier[452]	['chg_numb']	546	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[452]	['chg_numb', 'inc_value']	546	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[452]	['inc_value']	546	"mid"
@Pattern	Unknown	2	2	#stat	Identifier[428]	[]	538	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[428]	['(mid) + (1)']	538	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[428]	['(mid) + (1)', 'chg_numb']	538	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[428]	['(mid) + (1)', 'chg_numb', 'inc_value']	538	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[428]	['(mid) + (1)', 'inc_value']	538	"mid"
@Pattern	Unknown	2	2	#stat	Identifier[428]	['chg_numb']	538	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[428]	['chg_numb', 'inc_value']	538	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[428]	['inc_value']	538	"mid"
@Pattern	Unknown	2	2	#stat	Identifier[445]	[]	542	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[445]	['(mid) + (1)']	542	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[445]	['(mid) + (1)', 'chg_numb']	542	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[445]	['(mid) + (1)', 'chg_numb', 'inc_value']	542	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[445]	['(mid) + (1)', 'inc_value']	542	"mid"
@Pattern	Unknown	2	2	#stat	Identifier[445]	['chg_numb']	542	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[445]	['chg_numb', 'inc_value']	542	"mid"
@Pattern	Unknown	1	1	#stat	Identifier[445]	['inc_value']	542	"mid"
@Pattern	Killed	1	0	#cons	InitAssignStatement[387]	[]	530	"beg"
@Pattern	Killed	1	0	#trap	InitAssignStatement[387]	[]	530	"beg"
@Pattern	Killed	16	2	#expr	DeferExpression[515]	[]	563	"list[0]"
@Pattern	Killed	1	0	#expr	DeferExpression[515]	['(value) % (*((list) + (0)))']	563	"list[0]"
@Pattern	Killed	16	2	#expr	DeferExpression[515]	['chg_numb']	563	"list[0]"
@Pattern	Killed	1	0	#expr	DeferExpression[515]	['(value) % (*((list) + (0)))', 'chg_numb']	563	"list[0]"
@Pattern	Killed	12	3	#trap	BinAssignStatement[516]	[]	563	"value = list[0]"
@Pattern	Killed	12	3	#trap	BinAssignStatement[516]	['trapping']	563	"value = list[0]"
@Pattern	Killed	25	5	#stat	Identifier[511]	[]	563	"value"
@Pattern	Killed	1	0	#stat	Identifier[511]	['@((value) % (*((list) + (0))))']	563	"value"
@Pattern	Killed	25	5	#stat	Identifier[511]	['chg_numb']	563	"value"
@Pattern	Killed	1	0	#stat	Identifier[511]	['@((value) % (*((list) + (0))))', 'chg_numb']	563	"value"
@Pattern	Killed	40	8	#cons	BinAssignStatement[516]	[]	563	"value = list[0]"
@Pattern	Killed	3	0	#cons	BinAssignStatement[516]	['(*((list) + (0))) != (0)']	563	"value = list[0]"
@Pattern	Killed	2	0	#trap	BinAssignStatement[548]	[]	565	"answer = bi_search(list, argc - 2, value)"
@Pattern	Killed	15	3	#cons	BinAssignStatement[548]	[]	565	"answer = bi_search(list, argc - 2, value)"
@Pattern	Killed	15	3	#cons	BinAssignStatement[548]	['true']	565	"answer = bi_search(list, argc - 2, value)"
@Pattern	Killed	14	2	#expr	Implicator[547]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	1	0	#expr	Implicator[547]	['(answer) % (bi_search(list, argc - 2, value))']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	14	2	#expr	Implicator[547]	['chg_numb']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	1	0	#expr	Implicator[547]	['(answer) % (bi_search(list, argc - 2, value))', 'chg_numb']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	234	42	#cons	WaitAssignStatement[546]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	234	42	#cons	WaitAssignStatement[546]	['true']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	14	2	#stat	Identifier[534]	[]	565	"answer"
@Pattern	Killed	1	0	#stat	Identifier[534]	['@((answer) % (bi_search(list, argc - 2, value)))']	565	"answer"
@Pattern	Killed	14	2	#stat	Identifier[534]	['chg_numb']	565	"answer"
@Pattern	Killed	1	0	#stat	Identifier[534]	['@((answer) % (bi_search(list, argc - 2, value)))', 'chg_numb']	565	"answer"
@Pattern	Killed	5	0	#trap	WaitAssignStatement[546]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	1	0	#flow	InitAssignStatement[491]	[]	556	"answer"
@Pattern	Killed	1	0	#cons	InitAssignStatement[491]	[]	556	"answer"
@Pattern	Killed	29	6	#trap	IfStatement[495]	[]	559	"if(argc > 1)     {       list = parse_input(argc, argv);      value = list[0];      qsort(list + 1, argc - 2, sizeof(int), cmp_int);      answer = bi_search(list, argc - 2, value);      free(list);        if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }      return 0;     }      else     {      fprintf(stderr, "Too few arguments are provided.\n");      return -1;     }"
@Pattern	Killed	29	6	#trap	IfStatement[495]	['trapping']	559	"if(argc > 1)     {       list = parse_input(argc, argv);      value = list[0];      qsort(list + 1, argc - 2, sizeof(int), cmp_int);      answer = bi_search(list, argc - 2, value);      free(list);        if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }      return 0;     }      else     {      fprintf(stderr, "Too few arguments are provided.\n");      return -1;     }"
@Pattern	Killed	2	0	#flow	IfStatement[495]	[]	559	"if(argc > 1)     {       list = parse_input(argc, argv);      value = list[0];      qsort(list + 1, argc - 2, sizeof(int), cmp_int);      answer = bi_search(list, argc - 2, value);      free(list);        if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }      return 0;     }      else     {      fprintf(stderr, "Too few arguments are provided.\n");      return -1;     }"
@Pattern	Killed	1	0	#trap	WaitAssignStatement[507]	[]	562	"parse_input(argc, argv)"
@Pattern	Killed	1	0	#flow	BinAssignStatement[509]	[]	562	"list = parse_input(argc, argv)"
@Pattern	Killed	1	0	#cons	BinAssignStatement[509]	[]	562	"list = parse_input(argc, argv)"
@Pattern	Killed	107	14	#cons	CallStatement[528]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	107	14	#cons	CallStatement[528]	['true']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	1	0	#flow	BinAssignStatement[516]	[]	563	"value = list[0]"
@Pattern	Killed	1	0	#trap	WaitAssignStatement[532]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	69	5	#cons	WaitAssignStatement[532]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	69	5	#cons	WaitAssignStatement[532]	['true']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	1	0	#flow	WaitAssignStatement[532]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Unknown	1	1	#cons	CallStatement[553]	[]	566	"free(list)"
@Pattern	Unknown	1	1	#cons	CallStatement[553]	['true']	566	"free(list)"
@Pattern	Alive	0	1	#flow	BinAssignStatement[548]	[]	565	"answer = bi_search(list, argc - 2, value)"
@Pattern	Killed	1	0	#trap	WaitAssignStatement[557]	[]	566	"free(list)"
@Pattern	Killed	2	0	#cons	WaitAssignStatement[557]	[]	566	"free(list)"
@Pattern	Killed	1	0	#flow	WaitAssignStatement[557]	[]	566	"free(list)"
@Pattern	Killed	145	20	#cons	IfStatement[562]	[]	569	"if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }"
@Pattern	Killed	74	8	#cons	IfStatement[562]	['true']	569	"if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }"
@Pattern	Killed	32	3	#trap	IfStatement[562]	[]	569	"if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }"
@Pattern	Killed	32	3	#trap	IfStatement[562]	['trapping']	569	"if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }"
@Pattern	Killed	3	0	#cons	CallStatement[604]	[]	582	"fprintf(stderr, "Too few arguments are provided.\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[608]	[]	582	"fprintf(stderr, "Too few arguments are provided.\n")"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[608]	['trapping']	582	"fprintf(stderr, "Too few arguments are provided.\n")"
@Pattern	Killed	3	2	#cons	WaitAssignStatement[608]	[]	582	"fprintf(stderr, "Too few arguments are provided.\n")"
@Pattern	Killed	3	2	#cons	WaitAssignStatement[608]	['true']	582	"fprintf(stderr, "Too few arguments are provided.\n")"
@Pattern	Killed	2	0	#flow	IfStatement[562]	[]	569	"if(answer >= 0)      {          fprintf(stdout, "list[%d] = %d\n", answer, value);      }      else      {          fprintf(stdout, "%d is not in list.\n", value);      }"
@Pattern	Killed	43	6	#cons	CallStatement[571]	[]	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	43	6	#cons	CallStatement[571]	['true']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[575]	[]	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[575]	['trapping']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	30	3	#cons	WaitAssignStatement[575]	[]	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	30	3	#cons	WaitAssignStatement[575]	['true']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	24	2	#cons	CallStatement[584]	[]	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	24	2	#cons	CallStatement[584]	['true']	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[588]	[]	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	3	2	#trap	WaitAssignStatement[588]	['trapping']	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	17	2	#cons	WaitAssignStatement[588]	[]	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	17	2	#cons	WaitAssignStatement[588]	['true']	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	36	8	#expr	RelationExpression[494]	[]	559	"argc > 1"
@Pattern	Killed	1	0	#expr	RelationExpression[494]	['(argc) + (1)']	559	"argc > 1"
@Pattern	Killed	36	8	#expr	RelationExpression[494]	['not_bool']	559	"argc > 1"
@Pattern	Killed	1	0	#expr	RelationExpression[494]	['(argc) + (1)', 'not_bool']	559	"argc > 1"
@Pattern	Killed	39	5	#expr	RelationExpression[561]	[]	569	"answer >= 0"
@Pattern	Killed	1	0	#expr	RelationExpression[561]	['(answer) + (0)']	569	"answer >= 0"
@Pattern	Killed	39	2	#expr	RelationExpression[561]	['not_bool']	569	"answer >= 0"
@Pattern	Killed	1	0	#expr	RelationExpression[561]	['(answer) + (0)', 'not_bool']	569	"answer >= 0"
@Pattern	Killed	2	0	#refr	Identifier[492]	[]	559	"argc"
@Pattern	Killed	2	0	#refr	Identifier[559]	[]	569	"answer"
@Pattern	Killed	13	1	#stat	Implicator[506]	[]	562	"parse_input(argc, argv)"
@Pattern	Killed	13	1	#stat	Implicator[506]	['@(parse_input(argc, argv))']	562	"parse_input(argc, argv)"
@Pattern	Killed	13	1	#stat	Implicator[506]	['@(parse_input(argc, argv))', 'chg_addr']	562	"parse_input(argc, argv)"
@Pattern	Killed	13	1	#stat	Implicator[506]	['chg_addr']	562	"parse_input(argc, argv)"
@Pattern	Killed	13	1	#expr	WaitExpression[505]	[]	562	"parse_input(argc, argv)"
@Pattern	Killed	13	1	#expr	WaitExpression[505]	['parse_input(argc, argv)']	562	"parse_input(argc, argv)"
@Pattern	Killed	2	0	#refr	Identifier[501]	[]	562	"argc"
@Pattern	Killed	7	2	#trap	CallStatement[503]	[]	562	"parse_input(argc, argv)"
@Pattern	Killed	7	2	#trap	CallStatement[503]	['trapping']	562	"parse_input(argc, argv)"
@Pattern	Killed	47	3	#expr	ArithExpression[525]	[]	564	"argc - 2"
@Pattern	Killed	1	0	#expr	ArithExpression[525]	['(answer) - (2)']	564	"argc - 2"
@Pattern	Killed	47	3	#expr	ArithExpression[525]	['chg_numb']	564	"argc - 2"
@Pattern	Killed	1	0	#expr	ArithExpression[525]	['(answer) - (2)', 'chg_numb']	564	"argc - 2"
@Pattern	Killed	2	0	#refr	Identifier[523]	[]	564	"argc"
@Pattern	Killed	67	5	#expr	WaitExpression[530]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	67	5	#expr	WaitExpression[530]	['qsort((list) + (1), (argc) - (2), 4, cmp_int)']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	67	5	#stat	Implicator[531]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	67	5	#stat	Implicator[531]	['@(qsort((list) + (1), (argc) - (2), 4, cmp_int))']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	67	5	#stat	Implicator[531]	['@(qsort((list) + (1), (argc) - (2), 4, cmp_int))', 'chg_bytes']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	67	5	#stat	Implicator[531]	['chg_bytes']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	39	9	#trap	CallStatement[528]	[]	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	39	9	#trap	CallStatement[528]	['trapping']	564	"qsort(list + 1, argc - 2, sizeof(int), cmp_int)"
@Pattern	Killed	61	3	#stat	Implicator[545]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	61	3	#stat	Implicator[545]	['@(bi_search(list, (argc) - (2), value))']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	61	3	#stat	Implicator[545]	['@(bi_search(list, (argc) - (2), value))', 'chg_numb']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	61	3	#stat	Implicator[545]	['chg_numb']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	2	0	#refr	Identifier[541]	[]	565	"value"
@Pattern	Killed	61	3	#expr	WaitExpression[544]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	61	3	#expr	WaitExpression[544]	['bi_search(list, (argc) - (2), value)']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	38	5	#trap	CallStatement[542]	[]	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	38	5	#trap	CallStatement[542]	['trapping']	565	"bi_search(list, argc - 2, value)"
@Pattern	Killed	2	0	#refr	Identifier[538]	[]	565	"argc"
@Pattern	Killed	47	3	#expr	ArithExpression[540]	[]	565	"argc - 2"
@Pattern	Killed	1	0	#expr	ArithExpression[540]	['(answer) - (2)']	565	"argc - 2"
@Pattern	Killed	47	3	#expr	ArithExpression[540]	['chg_numb']	565	"argc - 2"
@Pattern	Killed	1	0	#expr	ArithExpression[540]	['(answer) - (2)', 'chg_numb']	565	"argc - 2"
@Pattern	Killed	2	0	#refr	Identifier[569]	[]	571	"answer"
@Pattern	Killed	27	1	#stat	Implicator[574]	[]	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	27	1	#stat	Implicator[574]	['@(fprintf(stdout, @Literal, answer, value))']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	27	1	#stat	Implicator[574]	['@(fprintf(stdout, @Literal, answer, value))', 'chg_numb']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	27	1	#stat	Implicator[574]	['chg_numb']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	27	1	#expr	WaitExpression[573]	[]	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	27	1	#expr	WaitExpression[573]	['fprintf(stdout, @Literal, answer, value)']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	15	1	#trap	CallStatement[571]	[]	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	15	1	#trap	CallStatement[571]	['trapping']	571	"fprintf(stdout, "list[%d] = %d\n", answer, value)"
@Pattern	Killed	2	0	#refr	Identifier[570]	[]	571	"value"
@Pattern	Killed	14	0	#expr	WaitExpression[586]	[]	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	2	0	#refr	Identifier[583]	[]	575	"value"
@Pattern	Killed	14	0	#stat	Implicator[587]	[]	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	9	0	#trap	CallStatement[584]	[]	575	"fprintf(stdout, "%d is not in list.\n", value)"
@Pattern	Killed	11	1	#expr	Identifier[492]	[]	559	"argc"
@Pattern	Killed	2	1	#expr	Identifier[492]	['-(argc)']	559	"argc"
@Pattern	Killed	2	1	#expr	Identifier[492]	['-(argc)', 'chg_numb']	559	"argc"
@Pattern	Killed	11	1	#expr	Identifier[492]	['chg_numb']	559	"argc"
@Pattern	Killed	11	1	#expr	ConstExpression[493]	[]	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'chg_numb']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'chg_numb', 'dec_value']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'chg_numb', 'set_neg']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'dec_value']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'dec_value', 'set_neg']	559	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[493]	['-(1)', 'set_neg']	559	"1"
@Pattern	Killed	11	1	#expr	ConstExpression[493]	['chg_numb']	559	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[493]	['chg_numb', 'dec_value']	559	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[493]	['chg_numb', 'dec_value', 'set_neg']	559	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[493]	['chg_numb', 'set_neg']	559	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[493]	['dec_value']	559	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[493]	['dec_value', 'set_neg']	559	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[493]	['set_neg']	559	"1"
@Pattern	Alive	6	16	#cons	ReturnAssignStatement[595]	[]	577	"return 0;"
@Pattern	Alive	0	2	#cons	ReturnAssignStatement[595]	['(0) != (0)']	577	"return 0;"
@Pattern	Alive	0	13	#expr	ConstExpression[593]	[]	577	"0"
@Pattern	Alive	0	13	#stat	ReturnPoint[594]	[]	577	"return"
@Pattern	Killed	6	3	#trap	ReturnAssignStatement[595]	[]	577	"return 0;"
@Pattern	Killed	6	3	#trap	ReturnAssignStatement[595]	['trapping']	577	"return 0;"
@Pattern	Alive	0	24	#expr	ArithExpression[611]	[]	583	"-1"
@Pattern	Alive	10	28	#cons	ReturnAssignStatement[613]	[]	583	"return -1;"
@Pattern	Alive	10	28	#cons	ReturnAssignStatement[613]	['true']	583	"return -1;"
@Pattern	Alive	0	24	#stat	ReturnPoint[612]	[]	583	"return"
@Pattern	Killed	10	4	#trap	ReturnAssignStatement[613]	[]	583	"return -1;"
@Pattern	Killed	10	4	#trap	ReturnAssignStatement[613]	['trapping']	583	"return -1;"
@Pattern	Killed	12	0	#expr	Identifier[559]	[]	569	"answer"
@Pattern	Killed	9	3	#expr	ConstExpression[560]	[]	569	"0"
@Pattern	Alive	0	3	#expr	ConstExpression[560]	['-(0)']	569	"0"
@Pattern	Alive	0	12	#expr	ConstExpression[610]	[]	583	"1"
@Pattern	Killed	9	3	#expr	ConstExpression[513]	[]	563	"0"
@Pattern	Alive	0	3	#expr	ConstExpression[513]	['-(0)']	563	"0"
@Pattern	Killed	9	3	#expr	ArithExpression[514]	[]
@Pattern	Alive	0	3	#expr	ArithExpression[514]	['(list) + (-(0))']
@Pattern	Killed	9	3	#refr	DeferExpression[515]	[]	563	"list[0]"
@Pattern	Alive	0	3	#refr	DeferExpression[515]	['*((list) + (-(0)))']	563	"list[0]"
@Pattern	Killed	9	1	#expr	ConstExpression[526]	[]	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'chg_numb']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'chg_numb', 'dec_value']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'chg_numb', 'dec_value', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'chg_numb', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'dec_value']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'dec_value', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	2	1	#expr	ConstExpression[526]	['-(4)', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	9	1	#expr	ConstExpression[526]	['chg_numb']	564	"sizeof(int)"
@Pattern	Killed	6	1	#expr	ConstExpression[526]	['chg_numb', 'dec_value']	564	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[526]	['chg_numb', 'dec_value', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[526]	['chg_numb', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	6	1	#expr	ConstExpression[526]	['dec_value']	564	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[526]	['dec_value', 'set_neg']	564	"sizeof(int)"
@Pattern	Killed	3	1	#expr	ConstExpression[526]	['set_neg']	564	"sizeof(int)"
@Pattern	Killed	11	1	#expr	Identifier[501]	[]	562	"argc"
@Pattern	Killed	2	1	#expr	Identifier[501]	['-(argc)']	562	"argc"
@Pattern	Killed	2	1	#expr	Identifier[501]	['-(argc)', 'chg_numb']	562	"argc"
@Pattern	Killed	11	1	#expr	Identifier[501]	['chg_numb']	562	"argc"
@Pattern	Killed	11	1	#expr	ArithExpression[522]	[]	564	"list + 1"
@Pattern	Killed	2	1	#expr	ArithExpression[522]	['(list) + (-(1))']	564	"list + 1"
@Pattern	Killed	2	1	#expr	ArithExpression[522]	['(list) + (-(1))', 'chg_addr']	564	"list + 1"
@Pattern	Killed	2	1	#expr	ArithExpression[522]	['(list) + (-(1))', 'chg_addr', 'dec_value']	564	"list + 1"
@Pattern	Killed	2	1	#expr	ArithExpression[522]	['(list) + (-(1))', 'dec_value']	564	"list + 1"
@Pattern	Killed	11	1	#expr	ArithExpression[522]	['chg_addr']	564	"list + 1"
@Pattern	Killed	7	1	#expr	ArithExpression[522]	['chg_addr', 'dec_value']	564	"list + 1"
@Pattern	Killed	7	1	#expr	ArithExpression[522]	['dec_value']	564	"list + 1"
@Pattern	Killed	11	1	#expr	ConstExpression[521]	[]	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'chg_numb']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'chg_numb', 'dec_value']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'chg_numb', 'dec_value', 'set_neg']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'chg_numb', 'set_neg']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'dec_value']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'dec_value', 'set_neg']	564	"1"
@Pattern	Killed	2	1	#expr	ConstExpression[521]	['-(1)', 'set_neg']	564	"1"
@Pattern	Killed	11	1	#expr	ConstExpression[521]	['chg_numb']	564	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[521]	['chg_numb', 'dec_value']	564	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[521]	['chg_numb', 'dec_value', 'set_neg']	564	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[521]	['chg_numb', 'set_neg']	564	"1"
@Pattern	Killed	7	1	#expr	ConstExpression[521]	['dec_value']	564	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[521]	['dec_value', 'set_neg']	564	"1"
@Pattern	Killed	5	1	#expr	ConstExpression[521]	['set_neg']	564	"1"
@Pattern	Killed	11	1	#expr	Identifier[523]	[]	564	"argc"
@Pattern	Killed	2	1	#expr	Identifier[523]	['-(argc)']	564	"argc"
@Pattern	Killed	2	1	#expr	Identifier[523]	['-(argc)', 'chg_numb']	564	"argc"
@Pattern	Killed	11	1	#expr	Identifier[523]	['chg_numb']	564	"argc"
@Pattern	Killed	11	1	#expr	ConstExpression[524]	[]	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'chg_numb']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'chg_numb', 'dec_value']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'chg_numb', 'dec_value', 'set_neg']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'chg_numb', 'set_neg']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'dec_value']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'dec_value', 'set_neg']	564	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[524]	['-(2)', 'set_neg']	564	"2"
@Pattern	Killed	11	1	#expr	ConstExpression[524]	['chg_numb']	564	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[524]	['chg_numb', 'dec_value']	564	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[524]	['chg_numb', 'dec_value', 'set_neg']	564	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[524]	['chg_numb', 'set_neg']	564	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[524]	['dec_value']	564	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[524]	['dec_value', 'set_neg']	564	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[524]	['set_neg']	564	"2"
@Pattern	Killed	12	0	#expr	Identifier[541]	[]	565	"value"
@Pattern	Killed	11	1	#expr	Identifier[538]	[]	565	"argc"
@Pattern	Killed	2	1	#expr	Identifier[538]	['-(argc)']	565	"argc"
@Pattern	Killed	2	1	#expr	Identifier[538]	['-(argc)', 'chg_numb']	565	"argc"
@Pattern	Killed	11	1	#expr	Identifier[538]	['chg_numb']	565	"argc"
@Pattern	Killed	11	1	#expr	ConstExpression[539]	[]	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'chg_numb']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'chg_numb', 'dec_value']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'chg_numb', 'dec_value', 'set_neg']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'chg_numb', 'set_neg']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'dec_value']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'dec_value', 'set_neg']	565	"2"
@Pattern	Killed	2	1	#expr	ConstExpression[539]	['-(2)', 'set_neg']	565	"2"
@Pattern	Killed	11	1	#expr	ConstExpression[539]	['chg_numb']	565	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[539]	['chg_numb', 'dec_value']	565	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[539]	['chg_numb', 'dec_value', 'set_neg']	565	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[539]	['chg_numb', 'set_neg']	565	"2"
@Pattern	Killed	8	1	#expr	ConstExpression[539]	['dec_value']	565	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[539]	['dec_value', 'set_neg']	565	"2"
@Pattern	Killed	4	1	#expr	ConstExpression[539]	['set_neg']	565	"2"
@Pattern	Killed	11	1	#expr	Identifier[569]	[]	571	"answer"
@Pattern	Killed	2	1	#expr	Identifier[569]	['-(answer)']	571	"answer"
@Pattern	Killed	2	1	#expr	Identifier[569]	['-(answer)', 'chg_numb']	571	"answer"
@Pattern	Killed	11	1	#expr	Identifier[569]	['chg_numb']	571	"answer"
@Pattern	Killed	12	0	#expr	Identifier[570]	[]	571	"value"
@Pattern	Killed	12	0	#expr	Identifier[583]	[]	575	"value"
@Pattern	Killed	4	0	#stat	Identifier[492]	[]	559	"argc"
@Pattern	Killed	4	0	#stat	DeferExpression[515]	[]	563	"list[0]"
@Pattern	Killed	4	0	#stat	Identifier[559]	[]	569	"answer"
@Pattern	Killed	4	0	#stat	Identifier[501]	[]	562	"argc"
@Pattern	Killed	4	0	#stat	Identifier[523]	[]	564	"argc"
@Pattern	Killed	4	0	#stat	Identifier[541]	[]	565	"value"
@Pattern	Unknown	2	2	#stat	Identifier[538]	[]	565	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[538]	['(argc) + (1)']	565	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[538]	['(argc) + (1)', 'chg_numb']	565	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[538]	['(argc) + (1)', 'chg_numb', 'inc_value']	565	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[538]	['(argc) + (1)', 'inc_value']	565	"argc"
@Pattern	Unknown	2	2	#stat	Identifier[538]	['chg_numb']	565	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[538]	['chg_numb', 'inc_value']	565	"argc"
@Pattern	Unknown	1	1	#stat	Identifier[538]	['inc_value']	565	"argc"
@Pattern	Unknown	2	2	#stat	Identifier[569]	[]	571	"answer"
@Pattern	Unknown	1	1	#stat	Identifier[569]	['(answer) + (1)']	571	"answer"
@Pattern	Unknown	1	1	#stat	Identifier[569]	['(answer) + (1)', 'chg_numb']	571	"answer"
@Pattern	Unknown	1	1	#stat	Identifier[569]	['(answer) + (1)', 'chg_numb', 'inc_value']	571	"answer"
@Pattern	Unknown	1	1	#stat	Identifier[569]	['(answer) + (1)', 'inc_value']	571	"answer"
@Pattern	Unknown	2	2	#stat	Identifier[569]	['chg_numb']	571	"answer"
@Pattern	Unknown	1	1	#stat	Identifier[569]	['chg_numb', 'inc_value']	571	"answer"
@Pattern	Unknown	1	1	#stat	Identifier[569]	['inc_value']	571	"answer"
@Pattern	Unknown	2	2	#stat	Identifier[570]	[]	571	"value"
@Pattern	Unknown	1	1	#stat	Identifier[570]	['(value) + (1)']	571	"value"
@Pattern	Unknown	1	1	#stat	Identifier[570]	['(value) + (1)', 'chg_numb']	571	"value"
@Pattern	Unknown	1	1	#stat	Identifier[570]	['(value) + (1)', 'chg_numb', 'inc_value']	571	"value"
@Pattern	Unknown	1	1	#stat	Identifier[570]	['(value) + (1)', 'inc_value']	571	"value"
@Pattern	Unknown	2	2	#stat	Identifier[570]	['chg_numb']	571	"value"
@Pattern	Unknown	1	1	#stat	Identifier[570]	['chg_numb', 'inc_value']	571	"value"
@Pattern	Unknown	1	1	#stat	Identifier[570]	['inc_value']	571	"value"
@Pattern	Unknown	2	2	#stat	Identifier[583]	[]	575	"value"
@Pattern	Unknown	1	1	#stat	Identifier[583]	['(value) + (1)']	575	"value"
@Pattern	Unknown	1	1	#stat	Identifier[583]	['(value) + (1)', 'chg_numb']	575	"value"
@Pattern	Unknown	1	1	#stat	Identifier[583]	['(value) + (1)', 'chg_numb', 'inc_value']	575	"value"
@Pattern	Unknown	1	1	#stat	Identifier[583]	['(value) + (1)', 'inc_value']	575	"value"
@Pattern	Unknown	2	2	#stat	Identifier[583]	['chg_numb']	575	"value"
@Pattern	Unknown	1	1	#stat	Identifier[583]	['chg_numb', 'inc_value']	575	"value"
@Pattern	Unknown	1	1	#stat	Identifier[583]	['inc_value']	575	"value"
@Pattern	Killed	1	0	#trap	InitAssignStatement[485]	[]	556	"*list"
@Pattern	Killed	1	0	#cons	InitAssignStatement[485]	[]	556	"*list"
@Pattern	Killed	2	0	#trap	CallStatement[604]	[]	582	"fprintf(stderr, "Too few arguments are provided.\n")"
@Pattern	Killed	1	0	#trap	CallStatement[553]	[]	566	"free(list)"
